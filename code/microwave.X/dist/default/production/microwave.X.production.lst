

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 23:55:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363                           
   364                           	psect	idataBANK0
   365  0749                     __pidataBANK0:	
   366                           
   367                           ;initializer for _check
   368  0749  3401               	retlw	1
   369  000E                     _TMR1	set	14
   370  0009                     _PORTE	set	9
   371  0006                     _PORTB	set	6
   372  0008                     _PORTD	set	8
   373  0007                     _PORTC	set	7
   374  0005                     _PORTA	set	5
   375  0080                     _TMR1ON	set	128
   376  0085                     _T1CKPS1	set	133
   377  0084                     _T1CKPS0	set	132
   378  0081                     _TMR1CS	set	129
   379  005E                     _PEIE	set	94
   380  0060                     _TMR1IF	set	96
   381  0059                     _INTF	set	89
   382  005C                     _INTE	set	92
   383  005F                     _GIE	set	95
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0085                     _TRISA	set	133
   388  0086                     _TRISB	set	134
   389  0460                     _TMR1IE	set	1120
   390  040E                     _INTEDG	set	1038
   391                           
   392                           	psect	strings
   393  0400                     __pstrings:	
   394  0400                     stringtab:	
   395  0400                     __stringtab:	
   396  0400                     stringcode:	
   397                           ;	String table - string pointers are 1 byte each
   398                           
   399  0400                     stringdir:	
   400  0400  3004               	movlw	high stringdir
   401  0401  008A               	movwf	10
   402  0402  0804               	movf	4,w
   403  0403  0A84               	incf	4,f
   404  0404  0782               	addwf	2,f
   405  0405                     __stringbase:	
   406  0405  3400               	retlw	0
   407  0406                     __end_of__stringtab:	
   408  0406                     STR_2:	
   409  0406  3472               	retlw	114	;'r'
   410  0407  3465               	retlw	101	;'e'
   411  0408  346D               	retlw	109	;'m'
   412  0409  346F               	retlw	111	;'o'
   413  040A  3476               	retlw	118	;'v'
   414  040B  3465               	retlw	101	;'e'
   415  040C  3464               	retlw	100	;'d'
   416  040D  3420               	retlw	32	;' '
   417  040E  3474               	retlw	116	;'t'
   418  040F  3469               	retlw	105	;'i'
   419  0410  346D               	retlw	109	;'m'
   420  0411  3465               	retlw	101	;'e'
   421  0412  3420               	retlw	32	;' '
   422  0413  3473               	retlw	115	;'s'
   423  0414  3465               	retlw	101	;'e'
   424  0415  3474               	retlw	116	;'t'
   425  0416  3474               	retlw	116	;'t'
   426  0417  3469               	retlw	105	;'i'
   427  0418  346E               	retlw	110	;'n'
   428  0419  3467               	retlw	103	;'g'
   429  041A  3400               	retlw	0
   430  041B                     STR_7:	
   431  041B  3444               	retlw	68	;'D'
   432  041C  346F               	retlw	111	;'o'
   433  041D  346F               	retlw	111	;'o'
   434  041E  3472               	retlw	114	;'r'
   435  041F  3420               	retlw	32	;' '
   436  0420  3469               	retlw	105	;'i'
   437  0421  3473               	retlw	115	;'s'
   438  0422  346E               	retlw	110	;'n'
   439  0423  3427               	retlw	39	;'''
   440  0424  3474               	retlw	116	;'t'
   441  0425  3420               	retlw	32	;' '
   442  0426  3463               	retlw	99	;'c'
   443  0427  346C               	retlw	108	;'l'
   444  0428  346F               	retlw	111	;'o'
   445  0429  3473               	retlw	115	;'s'
   446  042A  3465               	retlw	101	;'e'
   447  042B  3464               	retlw	100	;'d'
   448  042C  3400               	retlw	0
   449  042D                     STR_8:	
   450  042D  346F               	retlw	111	;'o'
   451  042E  3472               	retlw	114	;'r'
   452  042F  3420               	retlw	32	;' '
   453  0430  346E               	retlw	110	;'n'
   454  0431  346F               	retlw	111	;'o'
   455  0432  3474               	retlw	116	;'t'
   456  0433  3420               	retlw	32	;' '
   457  0434  3466               	retlw	102	;'f'
   458  0435  346F               	retlw	111	;'o'
   459  0436  3475               	retlw	117	;'u'
   460  0437  346E               	retlw	110	;'n'
   461  0438  3464               	retlw	100	;'d'
   462  0439  3420               	retlw	32	;' '
   463  043A  3466               	retlw	102	;'f'
   464  043B  346F               	retlw	111	;'o'
   465  043C  346F               	retlw	111	;'o'
   466  043D  3464               	retlw	100	;'d'
   467  043E  3400               	retlw	0
   468  043F                     STR_5:	
   469  043F  3468               	retlw	104	;'h'
   470  0440  3465               	retlw	101	;'e'
   471  0441  3461               	retlw	97	;'a'
   472  0442  3474               	retlw	116	;'t'
   473  0443  3465               	retlw	101	;'e'
   474  0444  3472               	retlw	114	;'r'
   475  0445  3420               	retlw	32	;' '
   476  0446  3469               	retlw	105	;'i'
   477  0447  3473               	retlw	115	;'s'
   478  0448  3420               	retlw	32	;' '
   479  0449  3477               	retlw	119	;'w'
   480  044A  346F               	retlw	111	;'o'
   481  044B  3472               	retlw	114	;'r'
   482  044C  346B               	retlw	107	;'k'
   483  044D  3469               	retlw	105	;'i'
   484  044E  346E               	retlw	110	;'n'
   485  044F  3467               	retlw	103	;'g'
   486  0450  3400               	retlw	0
   487  0451                     STR_6:	
   488  0451  3468               	retlw	104	;'h'
   489  0452  3465               	retlw	101	;'e'
   490  0453  3461               	retlw	97	;'a'
   491  0454  3474               	retlw	116	;'t'
   492  0455  3469               	retlw	105	;'i'
   493  0456  346E               	retlw	110	;'n'
   494  0457  3467               	retlw	103	;'g'
   495  0458  3420               	retlw	32	;' '
   496  0459  3469               	retlw	105	;'i'
   497  045A  3473               	retlw	115	;'s'
   498  045B  3420               	retlw	32	;' '
   499  045C  3466               	retlw	102	;'f'
   500  045D  3469               	retlw	105	;'i'
   501  045E  346E               	retlw	110	;'n'
   502  045F  3469               	retlw	105	;'i'
   503  0460  3473               	retlw	115	;'s'
   504  0461  3468               	retlw	104	;'h'
   505  0462  3400               	retlw	0
   506  0463                     STR_4:	
   507  0463  3470               	retlw	112	;'p'
   508  0464  3475               	retlw	117	;'u'
   509  0465  3473               	retlw	115	;'s'
   510  0466  3468               	retlw	104	;'h'
   511  0467  3420               	retlw	32	;' '
   512  0468  3473               	retlw	115	;'s'
   513  0469  3474               	retlw	116	;'t'
   514  046A  3461               	retlw	97	;'a'
   515  046B  3472               	retlw	114	;'r'
   516  046C  3474               	retlw	116	;'t'
   517  046D  3420               	retlw	32	;' '
   518  046E  3462               	retlw	98	;'b'
   519  046F  3475               	retlw	117	;'u'
   520  0470  3474               	retlw	116	;'t'
   521  0471  3474               	retlw	116	;'t'
   522  0472  346F               	retlw	111	;'o'
   523  0473  346E               	retlw	110	;'n'
   524  0474  3400               	retlw	0
   525  0475                     STR_3:	
   526  0475  3445               	retlw	69	;'E'
   527  0476  346E               	retlw	110	;'n'
   528  0477  3474               	retlw	116	;'t'
   529  0478  3465               	retlw	101	;'e'
   530  0479  3472               	retlw	114	;'r'
   531  047A  3420               	retlw	32	;' '
   532  047B  346E               	retlw	110	;'n'
   533  047C  3465               	retlw	101	;'e'
   534  047D  3477               	retlw	119	;'w'
   535  047E  3420               	retlw	32	;' '
   536  047F  3474               	retlw	116	;'t'
   537  0480  3469               	retlw	105	;'i'
   538  0481  346D               	retlw	109	;'m'
   539  0482  3465               	retlw	101	;'e'
   540  0483  3420               	retlw	32	;' '
   541  0484  3400               	retlw	0
   542  0485                     STR_1:	
   543  0485  3445               	retlw	69	;'E'
   544  0486  346E               	retlw	110	;'n'
   545  0487  3474               	retlw	116	;'t'
   546  0488  3465               	retlw	101	;'e'
   547  0489  3472               	retlw	114	;'r'
   548  048A  3420               	retlw	32	;' '
   549  048B  346E               	retlw	110	;'n'
   550  048C  3465               	retlw	101	;'e'
   551  048D  3477               	retlw	119	;'w'
   552  048E  3420               	retlw	32	;' '
   553  048F  3474               	retlw	116	;'t'
   554  0490  3469               	retlw	105	;'i'
   555  0491  346D               	retlw	109	;'m'
   556  0492  3465               	retlw	101	;'e'
   557  0493  3400               	retlw	0
   558  0475                     
   559                           ; #config settings
   560  0000                     
   561                           	psect	cinit
   562  000F                     start_initialization:	
   563  000F                     __initialization:	
   564                           
   565                           ; Initialize objects allocated to BANK0
   566  000F  120A  118A  2749  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   567  0014  00B0               	movwf	__pdataBANK0& (0+127)
   568                           
   569                           ; Clear objects allocated to BANK0
   570  0015  01AD               	clrf	__pbssBANK0& (0+127)
   571  0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   572  0017  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   573  0018                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  0018                     __end_of__initialization:	
   577  0018  0183               	clrf	3
   578  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssBANK0
   581  002D                     __pbssBANK0:	
   582  002D                     _check_cancel:	
   583  002D                     	ds	1
   584  002E                     _num_minuts:	
   585  002E                     	ds	1
   586  002F                     _num_sec:	
   587  002F                     	ds	1
   588                           
   589                           	psect	dataBANK0
   590  0030                     __pdataBANK0:	
   591  0030                     _check:	
   592  0030                     	ds	1
   593                           
   594                           	psect	cstackCOMMON
   595  0070                     __pcstackCOMMON:	
   596  0070                     ?_LCD_init:	
   597  0070                     ?_LCD_clearScreen:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_LCD_displayString:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Key_getPressedKey:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_timer1_INT:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Keypad_4x3_adjustSwitchNumber:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_LCD_sendCommand:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_INT_IRQ:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_ISR:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_ISR:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_LCD_displayCharacter:	
   628                           ; 1 bytes @ 0x0
   629                           
   630                           
   631                           ; 1 bytes @ 0x0
   632  0070                     	ds	3
   633  0073                     ??_timer1_INT:	
   634  0073                     ??_Keypad_4x3_adjustSwitchNumber:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     ??_LCD_sendCommand:	
   638                           ; 1 bytes @ 0x3
   639                           
   640  0073                     ??_INT_IRQ:	
   641                           ; 1 bytes @ 0x3
   642                           
   643  0073                     ??_LCD_displayCharacter:	
   644                           ; 1 bytes @ 0x3
   645                           
   646  0073                     ?___bmul:	
   647                           ; 1 bytes @ 0x3
   648                           
   649  0073                     ?___awdiv:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0073                     ?___awmod:	
   653                           ; 2 bytes @ 0x3
   654                           
   655  0073                     ___bmul@multiplicand:	
   656                           ; 2 bytes @ 0x3
   657                           
   658  0073                     ___awdiv@divisor:	
   659                           ; 1 bytes @ 0x3
   660                           
   661  0073                     ___awmod@divisor:	
   662                           ; 2 bytes @ 0x3
   663                           
   664                           
   665                           ; 2 bytes @ 0x3
   666  0073                     	ds	1
   667  0074                     ??___bmul:	
   668  0074                     LCD_sendCommand@command:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0074                     LCD_displayCharacter@data:	
   672                           ; 1 bytes @ 0x4
   673                           
   674                           
   675                           ; 1 bytes @ 0x4
   676  0074                     	ds	1
   677  0075                     ??_LCD_init:	
   678  0075                     ??_LCD_clearScreen:	
   679                           ; 1 bytes @ 0x5
   680                           
   681  0075                     ??_LCD_displayString:	
   682                           ; 1 bytes @ 0x5
   683                           
   684  0075                     ?_LCD_goToRowColumn:	
   685                           ; 1 bytes @ 0x5
   686                           
   687  0075                     Keypad_4x3_adjustSwitchNumber@num_button:	
   688                           ; 1 bytes @ 0x5
   689                           
   690  0075                     LCD_goToRowColumn@col:	
   691                           ; 1 bytes @ 0x5
   692                           
   693  0075                     ___bmul@product:	
   694                           ; 1 bytes @ 0x5
   695                           
   696  0075                     ___awdiv@dividend:	
   697                           ; 1 bytes @ 0x5
   698                           
   699  0075                     ___awmod@dividend:	
   700                           ; 2 bytes @ 0x5
   701                           
   702                           
   703                           ; 2 bytes @ 0x5
   704  0075                     	ds	1
   705  0076                     ??_LCD_goToRowColumn:	
   706  0076                     LCD_displayString@i:	
   707                           ; 1 bytes @ 0x6
   708                           
   709  0076                     ___bmul@multiplier:	
   710                           ; 1 bytes @ 0x6
   711                           
   712                           
   713                           ; 1 bytes @ 0x6
   714  0076                     	ds	1
   715  0077                     ??_Key_getPressedKey:	
   716  0077                     ??___awdiv:	
   717                           ; 1 bytes @ 0x7
   718                           
   719  0077                     ??___awmod:	
   720                           ; 1 bytes @ 0x7
   721                           
   722  0077                     LCD_displayString@str:	
   723                           ; 1 bytes @ 0x7
   724                           
   725                           
   726                           ; 1 bytes @ 0x7
   727  0077                     	ds	1
   728  0078                     LCD_goToRowColumn@row:	
   729  0078                     ___awmod@counter:	
   730                           ; 1 bytes @ 0x8
   731                           
   732                           
   733                           ; 1 bytes @ 0x8
   734  0078                     	ds	1
   735  0079                     Key_getPressedKey@row:	
   736  0079                     LCD_goToRowColumn@address:	
   737                           ; 1 bytes @ 0x9
   738                           
   739  0079                     ___awmod@sign:	
   740                           ; 1 bytes @ 0x9
   741                           
   742                           
   743                           ; 1 bytes @ 0x9
   744  0079                     	ds	1
   745  007A                     Key_getPressedKey@col:	
   746                           
   747                           ; 1 bytes @ 0xA
   748  007A                     	ds	1
   749                           
   750                           	psect	cstackBANK0
   751  0020                     __pcstackBANK0:	
   752  0020                     ___awdiv@counter:	
   753                           
   754                           ; 1 bytes @ 0x0
   755  0020                     	ds	1
   756  0021                     ___awdiv@sign:	
   757                           
   758                           ; 1 bytes @ 0x1
   759  0021                     	ds	1
   760  0022                     ___awdiv@quotient:	
   761                           
   762                           ; 2 bytes @ 0x2
   763  0022                     	ds	2
   764  0024                     ??_main:	
   765                           
   766                           ; 1 bytes @ 0x4
   767  0024                     	ds	3
   768  0027                     main@num_sec2:	
   769                           
   770                           ; 1 bytes @ 0x7
   771  0027                     	ds	1
   772  0028                     main@start:	
   773                           
   774                           ; 1 bytes @ 0x8
   775  0028                     	ds	1
   776  0029                     main@num_sec1:	
   777                           
   778                           ; 1 bytes @ 0x9
   779  0029                     	ds	1
   780  002A                     main@check_lcd:	
   781                           
   782                           ; 1 bytes @ 0xA
   783  002A                     	ds	1
   784  002B                     main@num_minut1:	
   785                           
   786                           ; 1 bytes @ 0xB
   787  002B                     	ds	1
   788  002C                     main@num_minut2:	
   789                           
   790                           ; 1 bytes @ 0xC
   791  002C                     	ds	1
   792                           
   793                           	psect	maintext
   794  001C                     __pmaintext:	
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 32 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  num_minut2      1   12[BANK0 ] unsigned char 
   805 ;;  num_minut1      1   11[BANK0 ] unsigned char 
   806 ;;  check_lcd       1   10[BANK0 ] unsigned char 
   807 ;;  num_sec1        1    9[BANK0 ] unsigned char 
   808 ;;  start           1    8[BANK0 ] unsigned char 
   809 ;;  num_sec2        1    7[BANK0 ] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : B00/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         0       6       0       0       0
   821 ;;      Temps:          0       3       0       0       0
   822 ;;      Totals:         0       9       0       0       0
   823 ;;Total ram usage:        9 bytes
   824 ;; Hardware stack levels required when called:    3
   825 ;; This function calls:
   826 ;;		_INT_IRQ
   827 ;;		_Key_getPressedKey
   828 ;;		_LCD_clearScreen
   829 ;;		_LCD_displayString
   830 ;;		_LCD_goToRowColumn
   831 ;;		_LCD_init
   832 ;;		___awdiv
   833 ;;		___awmod
   834 ;;		___bmul
   835 ;;		_timer1_INT
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _main
   843  001C                     _main:	
   844  001C                     l1603:	
   845                           ;incstack = 0
   846                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   847                           
   848                           
   849                           ;main.c: 34:     uint8 num_sec1=0;
   850  001C  1283               	bcf	3,5	;RP0=0, select bank0
   851  001D  1303               	bcf	3,6	;RP1=0, select bank0
   852  001E  01A9               	clrf	main@num_sec1
   853                           
   854                           ;main.c: 35:  uint8 num_sec2=0;
   855  001F  01A7               	clrf	main@num_sec2
   856                           
   857                           ;main.c: 37:  uint8 num_minut1=0;
   858  0020  01AB               	clrf	main@num_minut1
   859                           
   860                           ;main.c: 38:  uint8 num_minut2=0;
   861  0021  01AC               	clrf	main@num_minut2
   862                           
   863                           ;main.c: 40:     uint8 start =0;
   864  0022  01A8               	clrf	main@start
   865                           
   866                           ;main.c: 41:     uint8 check_lcd=0;
   867  0023  01AA               	clrf	main@check_lcd
   868  0024                     l1605:	
   869                           
   870                           ;main.c: 43:     TRISA &= 0x30 ;
   871  0024  3030               	movlw	48
   872  0025  00A4               	movwf	??_main
   873  0026  0824               	movf	??_main,w
   874  0027  1683               	bsf	3,5	;RP0=1, select bank1
   875  0028  1303               	bcf	3,6	;RP1=0, select bank1
   876  0029  0585               	andwf	5,f	;volatile
   877  002A                     l1607:	
   878                           
   879                           ;main.c: 44:     PORTA &= 0x30 ;
   880  002A  3030               	movlw	48
   881  002B  1283               	bcf	3,5	;RP0=0, select bank0
   882  002C  1303               	bcf	3,6	;RP1=0, select bank0
   883  002D  00A4               	movwf	??_main
   884  002E  0824               	movf	??_main,w
   885  002F  0585               	andwf	5,f	;volatile
   886  0030                     l1609:	
   887                           
   888                           ;main.c: 46:     TRISC &= 0xF0 ;
   889  0030  30F0               	movlw	240
   890  0031  00A4               	movwf	??_main
   891  0032  0824               	movf	??_main,w
   892  0033  1683               	bsf	3,5	;RP0=1, select bank1
   893  0034  1303               	bcf	3,6	;RP1=0, select bank1
   894  0035  0587               	andwf	7,f	;volatile
   895  0036                     l1611:	
   896                           
   897                           ;main.c: 47:     PORTC &= 0xF0 ;
   898  0036  30F0               	movlw	240
   899  0037  1283               	bcf	3,5	;RP0=0, select bank0
   900  0038  1303               	bcf	3,6	;RP1=0, select bank0
   901  0039  00A4               	movwf	??_main
   902  003A  0824               	movf	??_main,w
   903  003B  0587               	andwf	7,f	;volatile
   904  003C                     l1613:	
   905                           
   906                           ;main.c: 55:  (TRISD|=(1<<7));
   907  003C  1683               	bsf	3,5	;RP0=1, select bank1
   908  003D  1303               	bcf	3,6	;RP1=0, select bank1
   909  003E  1788               	bsf	8,7	;volatile
   910  003F                     l1615:	
   911                           
   912                           ;main.c: 57:  (TRISA|=(1<<4));
   913  003F  1605               	bsf	5,4	;volatile
   914  0040                     l1617:	
   915                           
   916                           ;main.c: 59:  (TRISB|=(1<<6));
   917  0040  1706               	bsf	6,6	;volatile
   918  0041                     l1619:	
   919                           
   920                           ;main.c: 66:  (TRISB&=(~(1<<7)));
   921  0041  307F               	movlw	127
   922  0042  1283               	bcf	3,5	;RP0=0, select bank0
   923  0043  1303               	bcf	3,6	;RP1=0, select bank0
   924  0044  00A4               	movwf	??_main
   925  0045  0824               	movf	??_main,w
   926  0046  1683               	bsf	3,5	;RP0=1, select bank1
   927  0047  1303               	bcf	3,6	;RP1=0, select bank1
   928  0048  0586               	andwf	6,f	;volatile
   929  0049                     l1621:	
   930                           
   931                           ;main.c: 67:  (PORTD&=(~(1<<7)));
   932  0049  307F               	movlw	127
   933  004A  1283               	bcf	3,5	;RP0=0, select bank0
   934  004B  1303               	bcf	3,6	;RP1=0, select bank0
   935  004C  00A4               	movwf	??_main
   936  004D  0824               	movf	??_main,w
   937  004E  0588               	andwf	8,f	;volatile
   938  004F                     l1623:	
   939                           
   940                           ;main.c: 70:  (TRISB&=(~(1<<1)));
   941  004F  30FD               	movlw	253
   942  0050  00A4               	movwf	??_main
   943  0051  0824               	movf	??_main,w
   944  0052  1683               	bsf	3,5	;RP0=1, select bank1
   945  0053  1303               	bcf	3,6	;RP1=0, select bank1
   946  0054  0586               	andwf	6,f	;volatile
   947  0055                     l1625:	
   948                           
   949                           ;main.c: 71:  (PORTB&=(~(1<<1)));
   950  0055  30FD               	movlw	253
   951  0056  1283               	bcf	3,5	;RP0=0, select bank0
   952  0057  1303               	bcf	3,6	;RP1=0, select bank0
   953  0058  00A4               	movwf	??_main
   954  0059  0824               	movf	??_main,w
   955  005A  0586               	andwf	6,f	;volatile
   956  005B                     l1627:	
   957                           
   958                           ;main.c: 72:  (TRISB&=(~(1<<2)));
   959  005B  30FB               	movlw	251
   960  005C  00A4               	movwf	??_main
   961  005D  0824               	movf	??_main,w
   962  005E  1683               	bsf	3,5	;RP0=1, select bank1
   963  005F  1303               	bcf	3,6	;RP1=0, select bank1
   964  0060  0586               	andwf	6,f	;volatile
   965  0061                     l1629:	
   966                           
   967                           ;main.c: 73:  (PORTB&=(~(1<<2)));
   968  0061  30FB               	movlw	251
   969  0062  1283               	bcf	3,5	;RP0=0, select bank0
   970  0063  1303               	bcf	3,6	;RP1=0, select bank0
   971  0064  00A4               	movwf	??_main
   972  0065  0824               	movf	??_main,w
   973  0066  0586               	andwf	6,f	;volatile
   974  0067                     l1631:	
   975                           
   976                           ;main.c: 76:  (TRISE&=(~(1<<0)));
   977  0067  30FE               	movlw	254
   978  0068  00A4               	movwf	??_main
   979  0069  0824               	movf	??_main,w
   980  006A  1683               	bsf	3,5	;RP0=1, select bank1
   981  006B  1303               	bcf	3,6	;RP1=0, select bank1
   982  006C  0589               	andwf	9,f	;volatile
   983  006D                     l1633:	
   984                           
   985                           ;main.c: 77:  (PORTE&=(~(1<<0)));
   986  006D  30FE               	movlw	254
   987  006E  1283               	bcf	3,5	;RP0=0, select bank0
   988  006F  1303               	bcf	3,6	;RP1=0, select bank0
   989  0070  00A4               	movwf	??_main
   990  0071  0824               	movf	??_main,w
   991  0072  0589               	andwf	9,f	;volatile
   992  0073                     l1635:	
   993                           
   994                           ;main.c: 83:  LCD_init();
   995  0073  120A  118A  2688  120A  118A  	fcall	_LCD_init
   996  0078                     l1637:	
   997                           
   998                           ;main.c: 86:  LCD_clearScreen();
   999  0078  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1000  007D                     l1639:	
  1001                           
  1002                           ;main.c: 87:  LCD_displayString("Enter new time");
  1003  007D  3080               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1004  007E  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1005                           
  1006                           ;main.c: 89:     while(num_minuts ==0)
  1007  0083  28BE               	goto	l1653
  1008  0084                     l1641:	
  1009                           
  1010                           ;main.c: 90:  {;main.c: 92:   num_minut2 = Key_getPressedKey();
  1011  0084  120A  118A  24FD  120A  118A  	fcall	_Key_getPressedKey
  1012  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1013  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1014  008B  00A4               	movwf	??_main
  1015  008C  0824               	movf	??_main,w
  1016  008D  00AC               	movwf	main@num_minut2
  1017  008E                     l1643:	
  1018                           
  1019                           ;main.c: 94:   PORTA =(PORTA & 0x30) | 0x08;
  1020  008E  0805               	movf	5,w	;volatile
  1021  008F  3930               	andlw	48
  1022  0090  3808               	iorlw	8
  1023  0091  0085               	movwf	5	;volatile
  1024  0092                     l1645:	
  1025                           
  1026                           ;main.c: 95:   PORTC =(PORTC & 0xF0)|(num_minut2 & 0x0F);
  1027  0092  300F               	movlw	15
  1028  0093  052C               	andwf	main@num_minut2,w
  1029  0094  00A4               	movwf	??_main
  1030  0095  0807               	movf	7,w	;volatile
  1031  0096  39F0               	andlw	240
  1032  0097  0424               	iorwf	??_main,w
  1033  0098  0087               	movwf	7	;volatile
  1034  0099                     l1647:	
  1035                           
  1036                           ;main.c: 96:   _delay((unsigned long)((500)*(1000000/4000.0)));
  1037  0099  30A3               	movlw	163
  1038  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1039  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1040  009C  00A5               	movwf	??_main+1
  1041  009D  3054               	movlw	84
  1042  009E  00A4               	movwf	??_main
  1043  009F                     u1037:	
  1044  009F  0BA4               	decfsz	??_main,f
  1045  00A0  289F               	goto	u1037
  1046  00A1  0BA5               	decfsz	??_main+1,f
  1047  00A2  289F               	goto	u1037
  1048  00A3  0000               	nop
  1049  00A4                     l1649:	
  1050                           
  1051                           ;main.c: 98:   num_minut1 = Key_getPressedKey();
  1052  00A4  120A  118A  24FD  120A  118A  	fcall	_Key_getPressedKey
  1053  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1054  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1055  00AB  00A4               	movwf	??_main
  1056  00AC  0824               	movf	??_main,w
  1057  00AD  00AB               	movwf	main@num_minut1
  1058  00AE                     l1651:	
  1059                           
  1060                           ;main.c: 100:   num_minuts=num_minut2 *10 + num_minut1;
  1061  00AE  300A               	movlw	10
  1062  00AF  00A4               	movwf	??_main
  1063  00B0  0824               	movf	??_main,w
  1064  00B1  00F3               	movwf	___bmul@multiplicand
  1065  00B2  082C               	movf	main@num_minut2,w
  1066  00B3  120A  118A  2716  120A  118A  	fcall	___bmul
  1067  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1068  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1069  00BA  072B               	addwf	main@num_minut1,w
  1070  00BB  00A5               	movwf	??_main+1
  1071  00BC  0825               	movf	??_main+1,w
  1072  00BD  00AE               	movwf	_num_minuts
  1073  00BE                     l1653:	
  1074                           
  1075                           ;main.c: 89:     while(num_minuts ==0)
  1076  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1077  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1078  00C0  082E               	movf	_num_minuts,w
  1079  00C1  1903               	btfsc	3,2
  1080  00C2  28C4               	goto	u821
  1081  00C3  28C5               	goto	u820
  1082  00C4                     u821:	
  1083  00C4  2884               	goto	l1641
  1084  00C5                     u820:	
  1085  00C5                     l1655:	
  1086                           
  1087                           ;main.c: 106:     INT_IRQ();
  1088  00C5  120A  118A  2742  120A  118A  	fcall	_INT_IRQ
  1089                           
  1090                           ;main.c: 109:     timer1_INT();
  1091  00CA  120A  118A  272B  120A  118A  	fcall	_timer1_INT
  1092  00CF                     l1657:	
  1093                           
  1094                           ;main.c: 114:     {;main.c: 118:   { PORTA =(PORTA & 0xF0) | 0x01; PORTC =(PORTC & 0xF0)
      +                          |(num_sec1 & 0x0F); _delay((unsigned long)((2)*(1000000/4000.0))); PORTA =(PORTA & 0xF0)
      +                           | 0x02; PORTC =(PORTC & 0xF0)|(num_sec2 & 0x0F); _delay((unsigned long)((2)*(1000000/40
      +                          00.0))); PORTA =(PORTA & 0xF0) | 0x04; PORTC =(PORTC & 0xF0)|(num_minut1 & 0x0F); _delay
      +                          ((unsigned long)((2)*(1000000/4000.0))); PORTA =(PORTA & 0xF0) | 0x08; PORTC =(PORTC & 0
      +                          xF0)|(num_minut2 & 0x0F); _delay((unsigned long)((2)*(1000000/4000.0)));};
  1095  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1096  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1097  00D1  0805               	movf	5,w	;volatile
  1098  00D2  39F0               	andlw	240
  1099  00D3  3801               	iorlw	1
  1100  00D4  0085               	movwf	5	;volatile
  1101  00D5                     l1659:	
  1102  00D5  300F               	movlw	15
  1103  00D6  0529               	andwf	main@num_sec1,w
  1104  00D7  00A4               	movwf	??_main
  1105  00D8  0807               	movf	7,w	;volatile
  1106  00D9  39F0               	andlw	240
  1107  00DA  0424               	iorwf	??_main,w
  1108  00DB  0087               	movwf	7	;volatile
  1109  00DC                     l1661:	
  1110  00DC  30A5               	movlw	165
  1111  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00DF  00A4               	movwf	??_main
  1114  00E0                     u1047:	
  1115  00E0  0BA4               	decfsz	??_main,f
  1116  00E1  28E0               	goto	u1047
  1117  00E2  28E3               	nop2
  1118  00E3                     l1663:	
  1119  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1120  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1121  00E5  0805               	movf	5,w	;volatile
  1122  00E6  39F0               	andlw	240
  1123  00E7  3802               	iorlw	2
  1124  00E8  0085               	movwf	5	;volatile
  1125  00E9                     l1665:	
  1126  00E9  300F               	movlw	15
  1127  00EA  0527               	andwf	main@num_sec2,w
  1128  00EB  00A4               	movwf	??_main
  1129  00EC  0807               	movf	7,w	;volatile
  1130  00ED  39F0               	andlw	240
  1131  00EE  0424               	iorwf	??_main,w
  1132  00EF  0087               	movwf	7	;volatile
  1133  00F0                     l1667:	
  1134  00F0  30A5               	movlw	165
  1135  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00F3  00A4               	movwf	??_main
  1138  00F4                     u1057:	
  1139  00F4  0BA4               	decfsz	??_main,f
  1140  00F5  28F4               	goto	u1057
  1141  00F6  28F7               	nop2
  1142  00F7                     l1669:	
  1143  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1144  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1145  00F9  0805               	movf	5,w	;volatile
  1146  00FA  39F0               	andlw	240
  1147  00FB  3804               	iorlw	4
  1148  00FC  0085               	movwf	5	;volatile
  1149  00FD                     l1671:	
  1150  00FD  300F               	movlw	15
  1151  00FE  052B               	andwf	main@num_minut1,w
  1152  00FF  00A4               	movwf	??_main
  1153  0100  0807               	movf	7,w	;volatile
  1154  0101  39F0               	andlw	240
  1155  0102  0424               	iorwf	??_main,w
  1156  0103  0087               	movwf	7	;volatile
  1157  0104                     l1673:	
  1158  0104  30A5               	movlw	165
  1159  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0107  00A4               	movwf	??_main
  1162  0108                     u1067:	
  1163  0108  0BA4               	decfsz	??_main,f
  1164  0109  2908               	goto	u1067
  1165  010A  290B               	nop2
  1166  010B                     l1675:	
  1167  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1168  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1169  010D  0805               	movf	5,w	;volatile
  1170  010E  39F0               	andlw	240
  1171  010F  3808               	iorlw	8
  1172  0110  0085               	movwf	5	;volatile
  1173  0111                     l1677:	
  1174  0111  300F               	movlw	15
  1175  0112  052C               	andwf	main@num_minut2,w
  1176  0113  00A4               	movwf	??_main
  1177  0114  0807               	movf	7,w	;volatile
  1178  0115  39F0               	andlw	240
  1179  0116  0424               	iorwf	??_main,w
  1180  0117  0087               	movwf	7	;volatile
  1181  0118                     l1679:	
  1182  0118  30A5               	movlw	165
  1183  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1184  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1185  011B  00A4               	movwf	??_main
  1186  011C                     u1077:	
  1187  011C  0BA4               	decfsz	??_main,f
  1188  011D  291C               	goto	u1077
  1189  011E  291F               	nop2
  1190  011F                     l1681:	
  1191                           
  1192                           ;main.c: 121:   if(check_cancel ==0)
  1193  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0121  082D               	movf	_check_cancel,w	;volatile
  1196  0122  1D03               	btfss	3,2
  1197  0123  2925               	goto	u831
  1198  0124  2926               	goto	u830
  1199  0125                     u831:	
  1200  0125  2B33               	goto	l1835
  1201  0126                     u830:	
  1202  0126                     l1683:	
  1203                           
  1204                           ;main.c: 122:   {;main.c: 127:    if((( !(PORTB & (1<<6)) )) && (( !(PORTA & (1<<4)) )) 
      +                          )
  1205  0126  1B06               	btfsc	6,6	;volatile
  1206  0127  2929               	goto	u841
  1207  0128  292A               	goto	u840
  1208  0129                     u841:	
  1209  0129  2AFA               	goto	l1815
  1210  012A                     u840:	
  1211  012A                     l1685:	
  1212  012A  1A05               	btfsc	5,4	;volatile
  1213  012B  292D               	goto	u851
  1214  012C  292E               	goto	u850
  1215  012D                     u851:	
  1216  012D  2AFA               	goto	l1815
  1217  012E                     u850:	
  1218  012E                     l1687:	
  1219                           
  1220                           ;main.c: 128:    {;main.c: 132:     check_lcd =0;
  1221  012E  01AA               	clrf	main@check_lcd
  1222                           
  1223                           ;main.c: 133:     while (( PORTD & (1<<7) ) && start ==0)
  1224  012F  2A12               	goto	l1757
  1225  0130                     l1689:	
  1226                           
  1227                           ;main.c: 134:     {;main.c: 139:      if(check_cancel == 1)
  1228  0130  032D               	decf	_check_cancel,w	;volatile
  1229  0131  1D03               	btfss	3,2
  1230  0132  2934               	goto	u861
  1231  0133  2935               	goto	u860
  1232  0134                     u861:	
  1233  0134  29B0               	goto	l1725
  1234  0135                     u860:	
  1235  0135                     l1691:	
  1236                           
  1237                           ;main.c: 140:      {;main.c: 141:       num_sec1=0;
  1238  0135  01A9               	clrf	main@num_sec1
  1239                           
  1240                           ;main.c: 142:       num_sec2=0;
  1241  0136  01A7               	clrf	main@num_sec2
  1242                           
  1243                           ;main.c: 143:       num_minuts=0;
  1244  0137  01AE               	clrf	_num_minuts
  1245                           
  1246                           ;main.c: 144:       num_minut1=0;
  1247  0138  01AB               	clrf	main@num_minut1
  1248                           
  1249                           ;main.c: 145:       num_minut2=0;
  1250  0139  01AC               	clrf	main@num_minut2
  1251  013A                     l1693:	
  1252                           
  1253                           ;main.c: 147:       PORTA =(PORTA & 0x30) | 0x01;
  1254  013A  0805               	movf	5,w	;volatile
  1255  013B  3930               	andlw	48
  1256  013C  3801               	iorlw	1
  1257  013D  0085               	movwf	5	;volatile
  1258  013E                     l1695:	
  1259                           
  1260                           ;main.c: 148:       PORTC =(PORTC & 0xF0)|(num_sec1 & 0x0F);
  1261  013E  0807               	movf	7,w	;volatile
  1262  013F  39F0               	andlw	240
  1263  0140  0087               	movwf	7	;volatile
  1264  0141                     l1697:	
  1265                           
  1266                           ;main.c: 150:       LCD_clearScreen();
  1267  0141  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1268  0146                     l1699:	
  1269                           
  1270                           ;main.c: 151:       LCD_displayString("removed time setting");
  1271  0146  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1272  0147  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1273  014C                     l1701:	
  1274                           
  1275                           ;main.c: 152:       _delay((unsigned long)((1000)*(1000000/4000.0)));
  1276  014C  3002               	movlw	2
  1277  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1278  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1279  014F  00A6               	movwf	??_main+2
  1280  0150  3045               	movlw	69
  1281  0151  00A5               	movwf	??_main+1
  1282  0152  30A9               	movlw	169
  1283  0153  00A4               	movwf	??_main
  1284  0154                     u1087:	
  1285  0154  0BA4               	decfsz	??_main,f
  1286  0155  2954               	goto	u1087
  1287  0156  0BA5               	decfsz	??_main+1,f
  1288  0157  2954               	goto	u1087
  1289  0158  0BA6               	decfsz	??_main+2,f
  1290  0159  2954               	goto	u1087
  1291  015A                     l1703:	
  1292                           
  1293                           ;main.c: 153:       LCD_clearScreen();
  1294  015A  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1295  015F                     l1705:	
  1296                           
  1297                           ;main.c: 154:       LCD_goToRowColumn(1,0);
  1298  015F  01F5               	clrf	LCD_goToRowColumn@col
  1299  0160  3001               	movlw	1
  1300  0161  120A  118A  2651  120A  118A  	fcall	_LCD_goToRowColumn
  1301  0166                     l1707:	
  1302                           
  1303                           ;main.c: 155:       LCD_displayString("Enter new time ");
  1304  0166  3070               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1305  0167  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1306                           
  1307                           ;main.c: 157:       while(num_minuts ==0)
  1308  016C  29A7               	goto	l1721
  1309  016D                     l1709:	
  1310                           
  1311                           ;main.c: 158:       {;main.c: 160:        num_minut2 = Key_getPressedKey();
  1312  016D  120A  118A  24FD  120A  118A  	fcall	_Key_getPressedKey
  1313  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0174  00A4               	movwf	??_main
  1316  0175  0824               	movf	??_main,w
  1317  0176  00AC               	movwf	main@num_minut2
  1318  0177                     l1711:	
  1319                           
  1320                           ;main.c: 162:        PORTA =(PORTA & 0xF0) | 0x08;
  1321  0177  0805               	movf	5,w	;volatile
  1322  0178  39F0               	andlw	240
  1323  0179  3808               	iorlw	8
  1324  017A  0085               	movwf	5	;volatile
  1325  017B                     l1713:	
  1326                           
  1327                           ;main.c: 163:        PORTC =(PORTC & 0xF0)|(num_minut2 & 0x0F);
  1328  017B  300F               	movlw	15
  1329  017C  052C               	andwf	main@num_minut2,w
  1330  017D  00A4               	movwf	??_main
  1331  017E  0807               	movf	7,w	;volatile
  1332  017F  39F0               	andlw	240
  1333  0180  0424               	iorwf	??_main,w
  1334  0181  0087               	movwf	7	;volatile
  1335  0182                     l1715:	
  1336                           
  1337                           ;main.c: 164:        _delay((unsigned long)((500)*(1000000/4000.0)));
  1338  0182  30A3               	movlw	163
  1339  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0185  00A5               	movwf	??_main+1
  1342  0186  3054               	movlw	84
  1343  0187  00A4               	movwf	??_main
  1344  0188                     u1097:	
  1345  0188  0BA4               	decfsz	??_main,f
  1346  0189  2988               	goto	u1097
  1347  018A  0BA5               	decfsz	??_main+1,f
  1348  018B  2988               	goto	u1097
  1349  018C  0000               	nop
  1350  018D                     l1717:	
  1351                           
  1352                           ;main.c: 166:        num_minut1 = Key_getPressedKey();
  1353  018D  120A  118A  24FD  120A  118A  	fcall	_Key_getPressedKey
  1354  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0194  00A4               	movwf	??_main
  1357  0195  0824               	movf	??_main,w
  1358  0196  00AB               	movwf	main@num_minut1
  1359  0197                     l1719:	
  1360                           
  1361                           ;main.c: 168:        num_minuts=num_minut2 *10 + num_minut1;
  1362  0197  300A               	movlw	10
  1363  0198  00A4               	movwf	??_main
  1364  0199  0824               	movf	??_main,w
  1365  019A  00F3               	movwf	___bmul@multiplicand
  1366  019B  082C               	movf	main@num_minut2,w
  1367  019C  120A  118A  2716  120A  118A  	fcall	___bmul
  1368  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1369  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1370  01A3  072B               	addwf	main@num_minut1,w
  1371  01A4  00A5               	movwf	??_main+1
  1372  01A5  0825               	movf	??_main+1,w
  1373  01A6  00AE               	movwf	_num_minuts
  1374  01A7                     l1721:	
  1375                           
  1376                           ;main.c: 157:       while(num_minuts ==0)
  1377  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1378  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1379  01A9  082E               	movf	_num_minuts,w
  1380  01AA  1903               	btfsc	3,2
  1381  01AB  29AD               	goto	u871
  1382  01AC  29AE               	goto	u870
  1383  01AD                     u871:	
  1384  01AD  296D               	goto	l1709
  1385  01AE                     u870:	
  1386  01AE                     l1723:	
  1387                           
  1388                           ;main.c: 170:       check_cancel=0;
  1389  01AE  01AD               	clrf	_check_cancel	;volatile
  1390                           
  1391                           ;main.c: 171:       check_lcd=0;
  1392  01AF  01AA               	clrf	main@check_lcd
  1393  01B0                     l1725:	
  1394                           
  1395                           ;main.c: 178:      if(check_lcd == 0)
  1396  01B0  082A               	movf	main@check_lcd,w
  1397  01B1  1D03               	btfss	3,2
  1398  01B2  29B4               	goto	u881
  1399  01B3  29B5               	goto	u880
  1400  01B4                     u881:	
  1401  01B4  29C4               	goto	l1733
  1402  01B5                     u880:	
  1403  01B5                     l1727:	
  1404                           
  1405                           ;main.c: 179:      {;main.c: 180:       LCD_clearScreen();
  1406  01B5  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1407  01BA                     l1729:	
  1408                           
  1409                           ;main.c: 181:       LCD_displayString("push start button");
  1410  01BA  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1411  01BB  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1412  01C0                     l1731:	
  1413                           
  1414                           ;main.c: 182:       check_lcd=1;
  1415  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1416  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1417  01C2  01AA               	clrf	main@check_lcd
  1418  01C3  0AAA               	incf	main@check_lcd,f
  1419  01C4                     l1733:	
  1420                           
  1421                           ;main.c: 185:      { PORTA =(PORTA & 0xF0) | 0x01; PORTC =(PORTC & 0xF0)|(num_sec1 & 0x0
      +                          F); _delay((unsigned long)((2)*(1000000/4000.0))); PORTA =(PORTA & 0xF0) | 0x02; PORTC =
      +                          (PORTC & 0xF0)|(num_sec2 & 0x0F); _delay((unsigned long)((2)*(1000000/4000.0))); PORTA =
      +                          (PORTA & 0xF0) | 0x04; PORTC =(PORTC & 0xF0)|(num_minut1 & 0x0F); _delay((unsigned long)
      +                          ((2)*(1000000/4000.0))); PORTA =(PORTA & 0xF0) | 0x08; PORTC =(PORTC & 0xF0)|(num_minut2
      +                           & 0x0F); _delay((unsigned long)((2)*(1000000/4000.0)));};
  1422  01C4  0805               	movf	5,w	;volatile
  1423  01C5  39F0               	andlw	240
  1424  01C6  3801               	iorlw	1
  1425  01C7  0085               	movwf	5	;volatile
  1426  01C8                     l1735:	
  1427  01C8  300F               	movlw	15
  1428  01C9  0529               	andwf	main@num_sec1,w
  1429  01CA  00A4               	movwf	??_main
  1430  01CB  0807               	movf	7,w	;volatile
  1431  01CC  39F0               	andlw	240
  1432  01CD  0424               	iorwf	??_main,w
  1433  01CE  0087               	movwf	7	;volatile
  1434  01CF                     l1737:	
  1435  01CF  30A5               	movlw	165
  1436  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1437  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1438  01D2  00A4               	movwf	??_main
  1439  01D3                     u1107:	
  1440  01D3  0BA4               	decfsz	??_main,f
  1441  01D4  29D3               	goto	u1107
  1442  01D5  29D6               	nop2
  1443  01D6                     l1739:	
  1444  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1445  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1446  01D8  0805               	movf	5,w	;volatile
  1447  01D9  39F0               	andlw	240
  1448  01DA  3802               	iorlw	2
  1449  01DB  0085               	movwf	5	;volatile
  1450  01DC                     l1741:	
  1451  01DC  300F               	movlw	15
  1452  01DD  0527               	andwf	main@num_sec2,w
  1453  01DE  00A4               	movwf	??_main
  1454  01DF  0807               	movf	7,w	;volatile
  1455  01E0  39F0               	andlw	240
  1456  01E1  0424               	iorwf	??_main,w
  1457  01E2  0087               	movwf	7	;volatile
  1458  01E3                     l1743:	
  1459  01E3  30A5               	movlw	165
  1460  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1461  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1462  01E6  00A4               	movwf	??_main
  1463  01E7                     u1117:	
  1464  01E7  0BA4               	decfsz	??_main,f
  1465  01E8  29E7               	goto	u1117
  1466  01E9  29EA               	nop2
  1467  01EA                     l1745:	
  1468  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1469  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1470  01EC  0805               	movf	5,w	;volatile
  1471  01ED  39F0               	andlw	240
  1472  01EE  3804               	iorlw	4
  1473  01EF  0085               	movwf	5	;volatile
  1474  01F0                     l1747:	
  1475  01F0  300F               	movlw	15
  1476  01F1  052B               	andwf	main@num_minut1,w
  1477  01F2  00A4               	movwf	??_main
  1478  01F3  0807               	movf	7,w	;volatile
  1479  01F4  39F0               	andlw	240
  1480  01F5  0424               	iorwf	??_main,w
  1481  01F6  0087               	movwf	7	;volatile
  1482  01F7                     l1749:	
  1483  01F7  30A5               	movlw	165
  1484  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1485  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1486  01FA  00A4               	movwf	??_main
  1487  01FB                     u1127:	
  1488  01FB  0BA4               	decfsz	??_main,f
  1489  01FC  29FB               	goto	u1127
  1490  01FD  29FE               	nop2
  1491  01FE                     l1751:	
  1492  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1493  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0200  0805               	movf	5,w	;volatile
  1495  0201  39F0               	andlw	240
  1496  0202  3808               	iorlw	8
  1497  0203  0085               	movwf	5	;volatile
  1498  0204                     l1753:	
  1499  0204  300F               	movlw	15
  1500  0205  052C               	andwf	main@num_minut2,w
  1501  0206  00A4               	movwf	??_main
  1502  0207  0807               	movf	7,w	;volatile
  1503  0208  39F0               	andlw	240
  1504  0209  0424               	iorwf	??_main,w
  1505  020A  0087               	movwf	7	;volatile
  1506  020B                     l1755:	
  1507  020B  30A5               	movlw	165
  1508  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1509  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1510  020E  00A4               	movwf	??_main
  1511  020F                     u1137:	
  1512  020F  0BA4               	decfsz	??_main,f
  1513  0210  2A0F               	goto	u1137
  1514  0211  2A12               	nop2
  1515  0212                     l1757:	
  1516                           
  1517                           ;main.c: 133:     while (( PORTD & (1<<7) ) && start ==0)
  1518  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0214  1F88               	btfss	8,7	;volatile
  1521  0215  2A17               	goto	u891
  1522  0216  2A18               	goto	u890
  1523  0217                     u891:	
  1524  0217  2A1D               	goto	l1761
  1525  0218                     u890:	
  1526  0218                     l1759:	
  1527  0218  0828               	movf	main@start,w
  1528  0219  1903               	btfsc	3,2
  1529  021A  2A1C               	goto	u901
  1530  021B  2A1D               	goto	u900
  1531  021C                     u901:	
  1532  021C  2930               	goto	l1689
  1533  021D                     u900:	
  1534  021D                     l1761:	
  1535                           
  1536                           ;main.c: 191:     if(check_lcd == 1)
  1537  021D  032A               	decf	main@check_lcd,w
  1538  021E  1D03               	btfss	3,2
  1539  021F  2A21               	goto	u911
  1540  0220  2A22               	goto	u910
  1541  0221                     u911:	
  1542  0221  2A30               	goto	l1769
  1543  0222                     u910:	
  1544  0222                     l1763:	
  1545                           
  1546                           ;main.c: 192:     {;main.c: 193:      LCD_clearScreen();
  1547  0222  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1548  0227                     l1765:	
  1549                           
  1550                           ;main.c: 194:      LCD_displayString("heater is working");
  1551  0227  303A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1552  0228  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1553  022D                     l1767:	
  1554                           
  1555                           ;main.c: 195:      check_lcd=0;
  1556  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1557  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1558  022F  01AA               	clrf	main@check_lcd
  1559  0230                     l1769:	
  1560                           
  1561                           ;main.c: 206:     { (PORTB|=(1<<7)); (PORTB|=(1<<1)); (PORTE|=(1<<0));}
  1562  0230  1786               	bsf	6,7	;volatile
  1563  0231                     l1771:	
  1564  0231  1486               	bsf	6,1	;volatile
  1565  0232                     l1773:	
  1566  0232  1409               	bsf	9,0	;volatile
  1567  0233                     l1775:	
  1568                           
  1569                           ;main.c: 209:     start = 1;
  1570  0233  01A8               	clrf	main@start
  1571  0234  0AA8               	incf	main@start,f
  1572  0235                     l1777:	
  1573                           
  1574                           ;main.c: 210:     check = 0 ;
  1575  0235  01B0               	clrf	_check	;volatile
  1576  0236                     l1779:	
  1577                           
  1578                           ;main.c: 213:     if(num_sec > 0)
  1579  0236  082F               	movf	_num_sec,w
  1580  0237  1903               	btfsc	3,2
  1581  0238  2A3A               	goto	u921
  1582  0239  2A3B               	goto	u920
  1583  023A                     u921:	
  1584  023A  2A9D               	goto	l1787
  1585  023B                     u920:	
  1586  023B                     l1781:	
  1587                           
  1588                           ;main.c: 214:     {;main.c: 215:      if(num_sec == 60)
  1589  023B  303C               	movlw	60
  1590  023C  062F               	xorwf	_num_sec,w
  1591  023D  1D03               	btfss	3,2
  1592  023E  2A40               	goto	u931
  1593  023F  2A41               	goto	u930
  1594  0240                     u931:	
  1595  0240  2A44               	goto	l1785
  1596  0241                     u930:	
  1597  0241                     l1783:	
  1598                           
  1599                           ;main.c: 216:      {;main.c: 217:       num_sec1 = 0;
  1600  0241  01A9               	clrf	main@num_sec1
  1601                           
  1602                           ;main.c: 218:       num_sec2 = 0;
  1603  0242  01A7               	clrf	main@num_sec2
  1604                           
  1605                           ;main.c: 220:      }
  1606  0243  28CF               	goto	l1657
  1607  0244                     l1785:	
  1608                           
  1609                           ;main.c: 222:      {;main.c: 223:       num_minut1=(num_minuts % 10);
  1610  0244  300A               	movlw	10
  1611  0245  00F3               	movwf	___awmod@divisor
  1612  0246  3000               	movlw	0
  1613  0247  00F4               	movwf	___awmod@divisor+1
  1614  0248  082E               	movf	_num_minuts,w
  1615  0249  00A4               	movwf	??_main
  1616  024A  01A5               	clrf	??_main+1
  1617  024B  0824               	movf	??_main,w
  1618  024C  00F5               	movwf	___awmod@dividend
  1619  024D  0825               	movf	??_main+1,w
  1620  024E  00F6               	movwf	___awmod@dividend+1
  1621  024F  120A  118A  2557  120A  118A  	fcall	___awmod
  1622  0254  0873               	movf	?___awmod,w
  1623  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0257  00A6               	movwf	??_main+2
  1626  0258  0826               	movf	??_main+2,w
  1627  0259  00AB               	movwf	main@num_minut1
  1628                           
  1629                           ;main.c: 224:       num_minut2=(num_minuts /10);
  1630  025A  300A               	movlw	10
  1631  025B  00F3               	movwf	___awdiv@divisor
  1632  025C  3000               	movlw	0
  1633  025D  00F4               	movwf	___awdiv@divisor+1
  1634  025E  082E               	movf	_num_minuts,w
  1635  025F  00A4               	movwf	??_main
  1636  0260  01A5               	clrf	??_main+1
  1637  0261  0824               	movf	??_main,w
  1638  0262  00F5               	movwf	___awdiv@dividend
  1639  0263  0825               	movf	??_main+1,w
  1640  0264  00F6               	movwf	___awdiv@dividend+1
  1641  0265  120A  118A  2494  120A  118A  	fcall	___awdiv
  1642  026A  0873               	movf	?___awdiv,w
  1643  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1644  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1645  026D  00A6               	movwf	??_main+2
  1646  026E  0826               	movf	??_main+2,w
  1647  026F  00AC               	movwf	main@num_minut2
  1648                           
  1649                           ;main.c: 226:       num_sec1=(num_sec % 10);
  1650  0270  300A               	movlw	10
  1651  0271  00F3               	movwf	___awmod@divisor
  1652  0272  3000               	movlw	0
  1653  0273  00F4               	movwf	___awmod@divisor+1
  1654  0274  082F               	movf	_num_sec,w
  1655  0275  00A4               	movwf	??_main
  1656  0276  01A5               	clrf	??_main+1
  1657  0277  0824               	movf	??_main,w
  1658  0278  00F5               	movwf	___awmod@dividend
  1659  0279  0825               	movf	??_main+1,w
  1660  027A  00F6               	movwf	___awmod@dividend+1
  1661  027B  120A  118A  2557  120A  118A  	fcall	___awmod
  1662  0280  0873               	movf	?___awmod,w
  1663  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0283  00A6               	movwf	??_main+2
  1666  0284  0826               	movf	??_main+2,w
  1667  0285  00A9               	movwf	main@num_sec1
  1668                           
  1669                           ;main.c: 227:       num_sec2=(num_sec /10);
  1670  0286  300A               	movlw	10
  1671  0287  00F3               	movwf	___awdiv@divisor
  1672  0288  3000               	movlw	0
  1673  0289  00F4               	movwf	___awdiv@divisor+1
  1674  028A  082F               	movf	_num_sec,w
  1675  028B  00A4               	movwf	??_main
  1676  028C  01A5               	clrf	??_main+1
  1677  028D  0824               	movf	??_main,w
  1678  028E  00F5               	movwf	___awdiv@dividend
  1679  028F  0825               	movf	??_main+1,w
  1680  0290  00F6               	movwf	___awdiv@dividend+1
  1681  0291  120A  118A  2494  120A  118A  	fcall	___awdiv
  1682  0296  0873               	movf	?___awdiv,w
  1683  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0299  00A6               	movwf	??_main+2
  1686  029A  0826               	movf	??_main+2,w
  1687  029B  00A7               	movwf	main@num_sec2
  1688  029C  28CF               	goto	l1657
  1689  029D                     l1787:	
  1690  029D  082E               	movf	_num_minuts,w
  1691  029E  1903               	btfsc	3,2
  1692  029F  2AA1               	goto	u941
  1693  02A0  2AA2               	goto	u940
  1694  02A1                     u941:	
  1695  02A1  2AD5               	goto	l1797
  1696  02A2                     u940:	
  1697  02A2                     l1789:	
  1698                           
  1699                           ;main.c: 232:     {;main.c: 234:      num_sec=60;
  1700  02A2  303C               	movlw	60
  1701  02A3  00A4               	movwf	??_main
  1702  02A4  0824               	movf	??_main,w
  1703  02A5  00AF               	movwf	_num_sec
  1704  02A6                     l1791:	
  1705                           
  1706                           ;main.c: 237:      num_minut1=(num_minuts % 10);
  1707  02A6  300A               	movlw	10
  1708  02A7  00F3               	movwf	___awmod@divisor
  1709  02A8  3000               	movlw	0
  1710  02A9  00F4               	movwf	___awmod@divisor+1
  1711  02AA  082E               	movf	_num_minuts,w
  1712  02AB  00A4               	movwf	??_main
  1713  02AC  01A5               	clrf	??_main+1
  1714  02AD  0824               	movf	??_main,w
  1715  02AE  00F5               	movwf	___awmod@dividend
  1716  02AF  0825               	movf	??_main+1,w
  1717  02B0  00F6               	movwf	___awmod@dividend+1
  1718  02B1  120A  118A  2557  120A  118A  	fcall	___awmod
  1719  02B6  0873               	movf	?___awmod,w
  1720  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1721  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1722  02B9  00A6               	movwf	??_main+2
  1723  02BA  0826               	movf	??_main+2,w
  1724  02BB  00AB               	movwf	main@num_minut1
  1725  02BC                     l1793:	
  1726                           
  1727                           ;main.c: 238:      num_minut2=(num_minuts /10);
  1728  02BC  300A               	movlw	10
  1729  02BD  00F3               	movwf	___awdiv@divisor
  1730  02BE  3000               	movlw	0
  1731  02BF  00F4               	movwf	___awdiv@divisor+1
  1732  02C0  082E               	movf	_num_minuts,w
  1733  02C1  00A4               	movwf	??_main
  1734  02C2  01A5               	clrf	??_main+1
  1735  02C3  0824               	movf	??_main,w
  1736  02C4  00F5               	movwf	___awdiv@dividend
  1737  02C5  0825               	movf	??_main+1,w
  1738  02C6  00F6               	movwf	___awdiv@dividend+1
  1739  02C7  120A  118A  2494  120A  118A  	fcall	___awdiv
  1740  02CC  0873               	movf	?___awdiv,w
  1741  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1742  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1743  02CF  00A6               	movwf	??_main+2
  1744  02D0  0826               	movf	??_main+2,w
  1745  02D1  00AC               	movwf	main@num_minut2
  1746  02D2                     l1795:	
  1747                           
  1748                           ;main.c: 239:      num_minuts--;
  1749  02D2  3001               	movlw	1
  1750  02D3  02AE               	subwf	_num_minuts,f
  1751                           
  1752                           ;main.c: 241:     }
  1753  02D4  28CF               	goto	l1657
  1754  02D5                     l1797:	
  1755                           
  1756                           ;main.c: 244:     {;main.c: 245:      num_sec1=0;
  1757  02D5  01A9               	clrf	main@num_sec1
  1758  02D6                     l1799:	
  1759                           
  1760                           ;main.c: 255:      { (PORTB&=(~(1<<7))); (PORTB&=(~(1<<1))); (PORTE&=(~(1<<0))); check=1
      +                          ;}
  1761  02D6  307F               	movlw	127
  1762  02D7  00A4               	movwf	??_main
  1763  02D8  0824               	movf	??_main,w
  1764  02D9  0586               	andwf	6,f	;volatile
  1765  02DA                     l1801:	
  1766  02DA  30FD               	movlw	253
  1767  02DB  00A4               	movwf	??_main
  1768  02DC  0824               	movf	??_main,w
  1769  02DD  0586               	andwf	6,f	;volatile
  1770  02DE                     l1803:	
  1771  02DE  30FE               	movlw	254
  1772  02DF  00A4               	movwf	??_main
  1773  02E0  0824               	movf	??_main,w
  1774  02E1  0589               	andwf	9,f	;volatile
  1775  02E2                     l1805:	
  1776  02E2  3001               	movlw	1
  1777  02E3  00A4               	movwf	??_main
  1778  02E4  0824               	movf	??_main,w
  1779  02E5  00B0               	movwf	_check	;volatile
  1780  02E6                     l1807:	
  1781                           
  1782                           ;main.c: 259:      if(check_lcd == 1)
  1783  02E6  032A               	decf	main@check_lcd,w
  1784  02E7  1D03               	btfss	3,2
  1785  02E8  2AEA               	goto	u951
  1786  02E9  2AEB               	goto	u950
  1787  02EA                     u951:	
  1788  02EA  2B32               	goto	l86
  1789  02EB                     u950:	
  1790  02EB                     l1809:	
  1791                           
  1792                           ;main.c: 260:      {;main.c: 261:       LCD_clearScreen();
  1793  02EB  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1794  02F0                     l1811:	
  1795                           
  1796                           ;main.c: 262:       LCD_displayString("heating is finish");
  1797  02F0  304C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1798  02F1  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1799  02F6                     l1813:	
  1800                           
  1801                           ;main.c: 263:       check_lcd=0;
  1802  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1803  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1804  02F8  01AA               	clrf	main@check_lcd
  1805  02F9  28CF               	goto	l1657
  1806  02FA                     l1815:	
  1807                           
  1808                           ;main.c: 270:    {;main.c: 279:     { (PORTB&=(~(1<<7))); (PORTB&=(~(1<<1))); (PORTE&=(~
      +                          (1<<0))); check=1;}
  1809  02FA  307F               	movlw	127
  1810  02FB  00A4               	movwf	??_main
  1811  02FC  0824               	movf	??_main,w
  1812  02FD  0586               	andwf	6,f	;volatile
  1813  02FE  30FD               	movlw	253
  1814  02FF  00A4               	movwf	??_main
  1815  0300  0824               	movf	??_main,w
  1816  0301  0586               	andwf	6,f	;volatile
  1817  0302  30FE               	movlw	254
  1818  0303  00A4               	movwf	??_main
  1819  0304  0824               	movf	??_main,w
  1820  0305  0589               	andwf	9,f	;volatile
  1821  0306                     l1817:	
  1822  0306  3001               	movlw	1
  1823  0307  00A4               	movwf	??_main
  1824  0308  0824               	movf	??_main,w
  1825  0309  00B0               	movwf	_check	;volatile
  1826  030A                     l1819:	
  1827                           
  1828                           ;main.c: 282:     if(check_lcd == 0 || start == 1)
  1829  030A  082A               	movf	main@check_lcd,w
  1830  030B  1903               	btfsc	3,2
  1831  030C  2B0E               	goto	u961
  1832  030D  2B0F               	goto	u960
  1833  030E                     u961:	
  1834  030E  2B14               	goto	l1823
  1835  030F                     u960:	
  1836  030F                     l1821:	
  1837  030F  0328               	decf	main@start,w
  1838  0310  1D03               	btfss	3,2
  1839  0311  2B13               	goto	u971
  1840  0312  2B14               	goto	u970
  1841  0313                     u971:	
  1842  0313  28CF               	goto	l1657
  1843  0314                     u970:	
  1844  0314                     l1823:	
  1845                           
  1846                           ;main.c: 283:     {;main.c: 288:      LCD_clearScreen();
  1847  0314  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1848  0319                     l1825:	
  1849                           
  1850                           ;main.c: 289:      LCD_displayString("Door isn't closed");
  1851  0319  3016               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1852  031A  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1853  031F                     l1827:	
  1854                           
  1855                           ;main.c: 290:      LCD_goToRowColumn(1,0);
  1856  031F  01F5               	clrf	LCD_goToRowColumn@col
  1857  0320  3001               	movlw	1
  1858  0321  120A  118A  2651  120A  118A  	fcall	_LCD_goToRowColumn
  1859  0326                     l1829:	
  1860                           
  1861                           ;main.c: 291:      LCD_displayString("or not found food");
  1862  0326  3028               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1863  0327  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1864  032C                     l1831:	
  1865                           
  1866                           ;main.c: 292:      check_lcd=1;
  1867  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1868  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1869  032E  01AA               	clrf	main@check_lcd
  1870  032F  0AAA               	incf	main@check_lcd,f
  1871  0330                     l1833:	
  1872                           
  1873                           ;main.c: 293:      start = 0;
  1874  0330  01A8               	clrf	main@start
  1875  0331  28CF               	goto	l1657
  1876  0332                     l86:	
  1877                           ;main.c: 295:    }
  1878                           
  1879                           
  1880                           ;main.c: 297:   }
  1881  0332  28CF               	goto	l1657
  1882  0333                     l1835:	
  1883                           
  1884                           ;main.c: 302:   {;main.c: 303:    if(start==1 )
  1885  0333  0328               	decf	main@start,w
  1886  0334  1D03               	btfss	3,2
  1887  0335  2B37               	goto	u981
  1888  0336  2B38               	goto	u980
  1889  0337                     u981:	
  1890  0337  2B4B               	goto	l1845
  1891  0338                     u980:	
  1892  0338                     l1837:	
  1893                           
  1894                           ;main.c: 304:    {;main.c: 317:     { (PORTB&=(~(1<<7))); (PORTB&=(~(1<<1))); (PORTE&=(~
      +                          (1<<0))); check=1;}
  1895  0338  307F               	movlw	127
  1896  0339  00A4               	movwf	??_main
  1897  033A  0824               	movf	??_main,w
  1898  033B  0586               	andwf	6,f	;volatile
  1899  033C  30FD               	movlw	253
  1900  033D  00A4               	movwf	??_main
  1901  033E  0824               	movf	??_main,w
  1902  033F  0586               	andwf	6,f	;volatile
  1903  0340  30FE               	movlw	254
  1904  0341  00A4               	movwf	??_main
  1905  0342  0824               	movf	??_main,w
  1906  0343  0589               	andwf	9,f	;volatile
  1907  0344                     l1839:	
  1908  0344  3001               	movlw	1
  1909  0345  00A4               	movwf	??_main
  1910  0346  0824               	movf	??_main,w
  1911  0347  00B0               	movwf	_check	;volatile
  1912  0348                     l1841:	
  1913                           
  1914                           ;main.c: 320:     start =0;
  1915  0348  01A8               	clrf	main@start
  1916  0349                     l1843:	
  1917                           
  1918                           ;main.c: 322:     check_cancel = 0;
  1919  0349  01AD               	clrf	_check_cancel	;volatile
  1920                           
  1921                           ;main.c: 323:    }
  1922  034A  28CF               	goto	l1657
  1923  034B                     l1845:	
  1924                           
  1925                           ;main.c: 325:    {;main.c: 330:     num_sec1=0;
  1926  034B  01A9               	clrf	main@num_sec1
  1927                           
  1928                           ;main.c: 331:     num_sec2=0;
  1929  034C  01A7               	clrf	main@num_sec2
  1930                           
  1931                           ;main.c: 332:     num_minuts=0;
  1932  034D  01AE               	clrf	_num_minuts
  1933                           
  1934                           ;main.c: 333:     num_minut1=0;
  1935  034E  01AB               	clrf	main@num_minut1
  1936                           
  1937                           ;main.c: 334:     num_minut2=0;
  1938  034F  01AC               	clrf	main@num_minut2
  1939  0350                     l1847:	
  1940                           
  1941                           ;main.c: 337:     PORTA =(PORTA & 0x30) | 0x01;
  1942  0350  0805               	movf	5,w	;volatile
  1943  0351  3930               	andlw	48
  1944  0352  3801               	iorlw	1
  1945  0353  0085               	movwf	5	;volatile
  1946  0354                     l1849:	
  1947                           
  1948                           ;main.c: 338:     PORTC =(PORTC & 0xF0)|(num_sec1 & 0x0F);
  1949  0354  0807               	movf	7,w	;volatile
  1950  0355  39F0               	andlw	240
  1951  0356  0087               	movwf	7	;volatile
  1952  0357                     l1851:	
  1953                           
  1954                           ;main.c: 340:     LCD_clearScreen();
  1955  0357  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1956  035C                     l1853:	
  1957                           
  1958                           ;main.c: 341:     LCD_displayString("removed time setting");
  1959  035C  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1960  035D  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1961  0362                     l1855:	
  1962                           
  1963                           ;main.c: 342:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1964  0362  3002               	movlw	2
  1965  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0365  00A6               	movwf	??_main+2
  1968  0366  3045               	movlw	69
  1969  0367  00A5               	movwf	??_main+1
  1970  0368  30A9               	movlw	169
  1971  0369  00A4               	movwf	??_main
  1972  036A                     u1147:	
  1973  036A  0BA4               	decfsz	??_main,f
  1974  036B  2B6A               	goto	u1147
  1975  036C  0BA5               	decfsz	??_main+1,f
  1976  036D  2B6A               	goto	u1147
  1977  036E  0BA6               	decfsz	??_main+2,f
  1978  036F  2B6A               	goto	u1147
  1979  0370                     l1857:	
  1980                           
  1981                           ;main.c: 343:     LCD_clearScreen();
  1982  0370  120A  118A  273B  120A  118A  	fcall	_LCD_clearScreen
  1983  0375                     l1859:	
  1984                           
  1985                           ;main.c: 344:     LCD_goToRowColumn(1,0);
  1986  0375  01F5               	clrf	LCD_goToRowColumn@col
  1987  0376  3001               	movlw	1
  1988  0377  120A  118A  2651  120A  118A  	fcall	_LCD_goToRowColumn
  1989  037C                     l1861:	
  1990                           
  1991                           ;main.c: 345:     LCD_displayString("Enter new time ");
  1992  037C  3070               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1993  037D  120A  118A  26D6  120A  118A  	fcall	_LCD_displayString
  1994                           
  1995                           ;main.c: 347:     while(num_minuts ==0)
  1996  0382  2BBD               	goto	l1875
  1997  0383                     l1863:	
  1998                           
  1999                           ;main.c: 348:     {;main.c: 350:      num_minut2 = Key_getPressedKey();
  2000  0383  120A  118A  24FD  120A  118A  	fcall	_Key_getPressedKey
  2001  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2003  038A  00A4               	movwf	??_main
  2004  038B  0824               	movf	??_main,w
  2005  038C  00AC               	movwf	main@num_minut2
  2006  038D                     l1865:	
  2007                           
  2008                           ;main.c: 352:      PORTA =(PORTA & 0x30) | 0x08;
  2009  038D  0805               	movf	5,w	;volatile
  2010  038E  3930               	andlw	48
  2011  038F  3808               	iorlw	8
  2012  0390  0085               	movwf	5	;volatile
  2013  0391                     l1867:	
  2014                           
  2015                           ;main.c: 353:      PORTC =(PORTC & 0xF0)|(num_minut2 & 0x0F);
  2016  0391  300F               	movlw	15
  2017  0392  052C               	andwf	main@num_minut2,w
  2018  0393  00A4               	movwf	??_main
  2019  0394  0807               	movf	7,w	;volatile
  2020  0395  39F0               	andlw	240
  2021  0396  0424               	iorwf	??_main,w
  2022  0397  0087               	movwf	7	;volatile
  2023  0398                     l1869:	
  2024                           
  2025                           ;main.c: 354:      _delay((unsigned long)((500)*(1000000/4000.0)));
  2026  0398  30A3               	movlw	163
  2027  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2028  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2029  039B  00A5               	movwf	??_main+1
  2030  039C  3054               	movlw	84
  2031  039D  00A4               	movwf	??_main
  2032  039E                     u1157:	
  2033  039E  0BA4               	decfsz	??_main,f
  2034  039F  2B9E               	goto	u1157
  2035  03A0  0BA5               	decfsz	??_main+1,f
  2036  03A1  2B9E               	goto	u1157
  2037  03A2  0000               	nop
  2038  03A3                     l1871:	
  2039                           
  2040                           ;main.c: 356:      num_minut1 = Key_getPressedKey();
  2041  03A3  120A  118A  24FD  120A  118A  	fcall	_Key_getPressedKey
  2042  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2043  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2044  03AA  00A4               	movwf	??_main
  2045  03AB  0824               	movf	??_main,w
  2046  03AC  00AB               	movwf	main@num_minut1
  2047  03AD                     l1873:	
  2048                           
  2049                           ;main.c: 358:      num_minuts=num_minut2 *10 + num_minut1;
  2050  03AD  300A               	movlw	10
  2051  03AE  00A4               	movwf	??_main
  2052  03AF  0824               	movf	??_main,w
  2053  03B0  00F3               	movwf	___bmul@multiplicand
  2054  03B1  082C               	movf	main@num_minut2,w
  2055  03B2  120A  118A  2716  120A  118A  	fcall	___bmul
  2056  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2057  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2058  03B9  072B               	addwf	main@num_minut1,w
  2059  03BA  00A5               	movwf	??_main+1
  2060  03BB  0825               	movf	??_main+1,w
  2061  03BC  00AE               	movwf	_num_minuts
  2062  03BD                     l1875:	
  2063                           
  2064                           ;main.c: 347:     while(num_minuts ==0)
  2065  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2066  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2067  03BF  082E               	movf	_num_minuts,w
  2068  03C0  1903               	btfsc	3,2
  2069  03C1  2BC3               	goto	u991
  2070  03C2  2BC4               	goto	u990
  2071  03C3                     u991:	
  2072  03C3  2B83               	goto	l1863
  2073  03C4                     u990:	
  2074  03C4                     l1877:	
  2075                           
  2076                           ;main.c: 360:     check_cancel=0;
  2077  03C4  01AD               	clrf	_check_cancel	;volatile
  2078                           
  2079                           ;main.c: 361:     check_lcd=0;
  2080  03C5  01AA               	clrf	main@check_lcd
  2081  03C6  28CF               	goto	l1657
  2082  03C7  120A  118A  280C   	ljmp	start
  2083  03CA                     __end_of_main:	
  2084                           
  2085                           	psect	text1
  2086  072B                     __ptext1:	
  2087 ;; *************** function _timer1_INT *****************
  2088 ;; Defined at:
  2089 ;;		line 8 in file "timer1.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		None
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _timer1_INT
  2119  072B                     _timer1_INT:	
  2120  072B                     l1499:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _timer1_INT: []
  2123                           
  2124                           
  2125                           ;timer1.c: 11:     TMR1IE = 1 ;
  2126  072B  1683               	bsf	3,5	;RP0=1, select bank1
  2127  072C  1303               	bcf	3,6	;RP1=0, select bank1
  2128  072D  140C               	bsf	12,0	;volatile
  2129                           
  2130                           ;timer1.c: 12:     PEIE = 1 ;
  2131  072E  170B               	bsf	11,6	;volatile
  2132                           
  2133                           ;timer1.c: 13:     GIE = 1 ;
  2134  072F  178B               	bsf	11,7	;volatile
  2135                           
  2136                           ;timer1.c: 16:     TMR1 = 3036 ;
  2137  0730  300B               	movlw	11
  2138  0731  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0732  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0733  008F               	movwf	15	;volatile
  2141  0734  30DC               	movlw	220
  2142  0735  008E               	movwf	14	;volatile
  2143                           
  2144                           ;timer1.c: 19:     TMR1CS = 0 ;
  2145  0736  1090               	bcf	16,1	;volatile
  2146                           
  2147                           ;timer1.c: 22:     T1CKPS0 = 0 ;
  2148  0737  1210               	bcf	16,4	;volatile
  2149                           
  2150                           ;timer1.c: 23:     T1CKPS1 = 1 ;
  2151  0738  1690               	bsf	16,5	;volatile
  2152                           
  2153                           ;timer1.c: 26:     TMR1ON = 1;
  2154  0739  1410               	bsf	16,0	;volatile
  2155  073A                     l149:	
  2156  073A  0008               	return
  2157  073B                     __end_of_timer1_INT:	
  2158                           
  2159                           	psect	text2
  2160  0557                     __ptext2:	
  2161 ;; *************** function ___awmod *****************
  2162 ;; Defined at:
  2163 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  divisor         2    3[COMMON] int 
  2166 ;;  dividend        2    5[COMMON] int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  sign            1    9[COMMON] unsigned char 
  2169 ;;  counter         1    8[COMMON] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  2    3[COMMON] int 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         4       0       0       0       0
  2180 ;;      Locals:         2       0       0       0       0
  2181 ;;      Temps:          1       0       0       0       0
  2182 ;;      Totals:         7       0       0       0       0
  2183 ;;Total ram usage:        7 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function ___awmod
  2195  0557                     ___awmod:	
  2196  0557                     l1565:	
  2197                           ;incstack = 0
  2198                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2199                           
  2200  0557  01F9               	clrf	___awmod@sign
  2201  0558                     l1567:	
  2202  0558  1FF6               	btfss	___awmod@dividend+1,7
  2203  0559  2D5B               	goto	u731
  2204  055A  2D5C               	goto	u730
  2205  055B                     u731:	
  2206  055B  2D63               	goto	l1573
  2207  055C                     u730:	
  2208  055C                     l1569:	
  2209  055C  09F5               	comf	___awmod@dividend,f
  2210  055D  09F6               	comf	___awmod@dividend+1,f
  2211  055E  0AF5               	incf	___awmod@dividend,f
  2212  055F  1903               	skipnz
  2213  0560  0AF6               	incf	___awmod@dividend+1,f
  2214  0561                     l1571:	
  2215  0561  01F9               	clrf	___awmod@sign
  2216  0562  0AF9               	incf	___awmod@sign,f
  2217  0563                     l1573:	
  2218  0563  1FF4               	btfss	___awmod@divisor+1,7
  2219  0564  2D66               	goto	u741
  2220  0565  2D67               	goto	u740
  2221  0566                     u741:	
  2222  0566  2D6C               	goto	l1577
  2223  0567                     u740:	
  2224  0567                     l1575:	
  2225  0567  09F3               	comf	___awmod@divisor,f
  2226  0568  09F4               	comf	___awmod@divisor+1,f
  2227  0569  0AF3               	incf	___awmod@divisor,f
  2228  056A  1903               	skipnz
  2229  056B  0AF4               	incf	___awmod@divisor+1,f
  2230  056C                     l1577:	
  2231  056C  0873               	movf	___awmod@divisor,w
  2232  056D  0474               	iorwf	___awmod@divisor+1,w
  2233  056E  1903               	btfsc	3,2
  2234  056F  2D71               	goto	u751
  2235  0570  2D72               	goto	u750
  2236  0571                     u751:	
  2237  0571  2DA1               	goto	l1595
  2238  0572                     u750:	
  2239  0572                     l1579:	
  2240  0572  01F8               	clrf	___awmod@counter
  2241  0573  0AF8               	incf	___awmod@counter,f
  2242  0574  2D80               	goto	l1585
  2243  0575                     l1581:	
  2244  0575  3001               	movlw	1
  2245  0576                     u765:	
  2246  0576  1003               	clrc
  2247  0577  0DF3               	rlf	___awmod@divisor,f
  2248  0578  0DF4               	rlf	___awmod@divisor+1,f
  2249  0579  3EFF               	addlw	-1
  2250  057A  1D03               	skipz
  2251  057B  2D76               	goto	u765
  2252  057C                     l1583:	
  2253  057C  3001               	movlw	1
  2254  057D  00F7               	movwf	??___awmod
  2255  057E  0877               	movf	??___awmod,w
  2256  057F  07F8               	addwf	___awmod@counter,f
  2257  0580                     l1585:	
  2258  0580  1FF4               	btfss	___awmod@divisor+1,7
  2259  0581  2D83               	goto	u771
  2260  0582  2D84               	goto	u770
  2261  0583                     u771:	
  2262  0583  2D75               	goto	l1581
  2263  0584                     u770:	
  2264  0584                     l1587:	
  2265  0584  0874               	movf	___awmod@divisor+1,w
  2266  0585  0276               	subwf	___awmod@dividend+1,w
  2267  0586  1D03               	skipz
  2268  0587  2D8A               	goto	u785
  2269  0588  0873               	movf	___awmod@divisor,w
  2270  0589  0275               	subwf	___awmod@dividend,w
  2271  058A                     u785:	
  2272  058A  1C03               	skipc
  2273  058B  2D8D               	goto	u781
  2274  058C  2D8E               	goto	u780
  2275  058D                     u781:	
  2276  058D  2D94               	goto	l1591
  2277  058E                     u780:	
  2278  058E                     l1589:	
  2279  058E  0873               	movf	___awmod@divisor,w
  2280  058F  02F5               	subwf	___awmod@dividend,f
  2281  0590  0874               	movf	___awmod@divisor+1,w
  2282  0591  1C03               	skipc
  2283  0592  03F6               	decf	___awmod@dividend+1,f
  2284  0593  02F6               	subwf	___awmod@dividend+1,f
  2285  0594                     l1591:	
  2286  0594  3001               	movlw	1
  2287  0595                     u795:	
  2288  0595  1003               	clrc
  2289  0596  0CF4               	rrf	___awmod@divisor+1,f
  2290  0597  0CF3               	rrf	___awmod@divisor,f
  2291  0598  3EFF               	addlw	-1
  2292  0599  1D03               	skipz
  2293  059A  2D95               	goto	u795
  2294  059B                     l1593:	
  2295  059B  3001               	movlw	1
  2296  059C  02F8               	subwf	___awmod@counter,f
  2297  059D  1D03               	btfss	3,2
  2298  059E  2DA0               	goto	u801
  2299  059F  2DA1               	goto	u800
  2300  05A0                     u801:	
  2301  05A0  2D84               	goto	l1587
  2302  05A1                     u800:	
  2303  05A1                     l1595:	
  2304  05A1  0879               	movf	___awmod@sign,w
  2305  05A2  1903               	btfsc	3,2
  2306  05A3  2DA5               	goto	u811
  2307  05A4  2DA6               	goto	u810
  2308  05A5                     u811:	
  2309  05A5  2DAB               	goto	l1599
  2310  05A6                     u810:	
  2311  05A6                     l1597:	
  2312  05A6  09F5               	comf	___awmod@dividend,f
  2313  05A7  09F6               	comf	___awmod@dividend+1,f
  2314  05A8  0AF5               	incf	___awmod@dividend,f
  2315  05A9  1903               	skipnz
  2316  05AA  0AF6               	incf	___awmod@dividend+1,f
  2317  05AB                     l1599:	
  2318  05AB  0876               	movf	___awmod@dividend+1,w
  2319  05AC  00F4               	movwf	?___awmod+1
  2320  05AD  0875               	movf	___awmod@dividend,w
  2321  05AE  00F3               	movwf	?___awmod
  2322  05AF                     l443:	
  2323  05AF  0008               	return
  2324  05B0                     __end_of___awmod:	
  2325                           
  2326                           	psect	text3
  2327  0494                     __ptext3:	
  2328 ;; *************** function ___awdiv *****************
  2329 ;; Defined at:
  2330 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  divisor         2    3[COMMON] int 
  2333 ;;  dividend        2    5[COMMON] int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  quotient        2    2[BANK0 ] int 
  2336 ;;  sign            1    1[BANK0 ] unsigned char 
  2337 ;;  counter         1    0[BANK0 ] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2    3[COMMON] int 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         4       0       0       0       0
  2348 ;;      Locals:         0       4       0       0       0
  2349 ;;      Temps:          1       0       0       0       0
  2350 ;;      Totals:         5       4       0       0       0
  2351 ;;Total ram usage:        9 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function ___awdiv
  2363  0494                     ___awdiv:	
  2364  0494                     l1521:	
  2365                           ;incstack = 0
  2366                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2367                           
  2368  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0496  01A1               	clrf	___awdiv@sign
  2371  0497                     l1523:	
  2372  0497  1FF4               	btfss	___awdiv@divisor+1,7
  2373  0498  2C9A               	goto	u631
  2374  0499  2C9B               	goto	u630
  2375  049A                     u631:	
  2376  049A  2CA2               	goto	l1529
  2377  049B                     u630:	
  2378  049B                     l1525:	
  2379  049B  09F3               	comf	___awdiv@divisor,f
  2380  049C  09F4               	comf	___awdiv@divisor+1,f
  2381  049D  0AF3               	incf	___awdiv@divisor,f
  2382  049E  1903               	skipnz
  2383  049F  0AF4               	incf	___awdiv@divisor+1,f
  2384  04A0                     l1527:	
  2385  04A0  01A1               	clrf	___awdiv@sign
  2386  04A1  0AA1               	incf	___awdiv@sign,f
  2387  04A2                     l1529:	
  2388  04A2  1FF6               	btfss	___awdiv@dividend+1,7
  2389  04A3  2CA5               	goto	u641
  2390  04A4  2CA6               	goto	u640
  2391  04A5                     u641:	
  2392  04A5  2CAF               	goto	l1535
  2393  04A6                     u640:	
  2394  04A6                     l1531:	
  2395  04A6  09F5               	comf	___awdiv@dividend,f
  2396  04A7  09F6               	comf	___awdiv@dividend+1,f
  2397  04A8  0AF5               	incf	___awdiv@dividend,f
  2398  04A9  1903               	skipnz
  2399  04AA  0AF6               	incf	___awdiv@dividend+1,f
  2400  04AB                     l1533:	
  2401  04AB  3001               	movlw	1
  2402  04AC  00F7               	movwf	??___awdiv
  2403  04AD  0877               	movf	??___awdiv,w
  2404  04AE  06A1               	xorwf	___awdiv@sign,f
  2405  04AF                     l1535:	
  2406  04AF  01A2               	clrf	___awdiv@quotient
  2407  04B0  01A3               	clrf	___awdiv@quotient+1
  2408  04B1                     l1537:	
  2409  04B1  0873               	movf	___awdiv@divisor,w
  2410  04B2  0474               	iorwf	___awdiv@divisor+1,w
  2411  04B3  1903               	btfsc	3,2
  2412  04B4  2CB6               	goto	u651
  2413  04B5  2CB7               	goto	u650
  2414  04B6                     u651:	
  2415  04B6  2CEE               	goto	l1557
  2416  04B7                     u650:	
  2417  04B7                     l1539:	
  2418  04B7  01A0               	clrf	___awdiv@counter
  2419  04B8  0AA0               	incf	___awdiv@counter,f
  2420  04B9  2CC5               	goto	l1545
  2421  04BA                     l1541:	
  2422  04BA  3001               	movlw	1
  2423  04BB                     u665:	
  2424  04BB  1003               	clrc
  2425  04BC  0DF3               	rlf	___awdiv@divisor,f
  2426  04BD  0DF4               	rlf	___awdiv@divisor+1,f
  2427  04BE  3EFF               	addlw	-1
  2428  04BF  1D03               	skipz
  2429  04C0  2CBB               	goto	u665
  2430  04C1                     l1543:	
  2431  04C1  3001               	movlw	1
  2432  04C2  00F7               	movwf	??___awdiv
  2433  04C3  0877               	movf	??___awdiv,w
  2434  04C4  07A0               	addwf	___awdiv@counter,f
  2435  04C5                     l1545:	
  2436  04C5  1FF4               	btfss	___awdiv@divisor+1,7
  2437  04C6  2CC8               	goto	u671
  2438  04C7  2CC9               	goto	u670
  2439  04C8                     u671:	
  2440  04C8  2CBA               	goto	l1541
  2441  04C9                     u670:	
  2442  04C9                     l1547:	
  2443  04C9  3001               	movlw	1
  2444  04CA                     u685:	
  2445  04CA  1003               	clrc
  2446  04CB  0DA2               	rlf	___awdiv@quotient,f
  2447  04CC  0DA3               	rlf	___awdiv@quotient+1,f
  2448  04CD  3EFF               	addlw	-1
  2449  04CE  1D03               	skipz
  2450  04CF  2CCA               	goto	u685
  2451  04D0  0874               	movf	___awdiv@divisor+1,w
  2452  04D1  0276               	subwf	___awdiv@dividend+1,w
  2453  04D2  1D03               	skipz
  2454  04D3  2CD6               	goto	u695
  2455  04D4  0873               	movf	___awdiv@divisor,w
  2456  04D5  0275               	subwf	___awdiv@dividend,w
  2457  04D6                     u695:	
  2458  04D6  1C03               	skipc
  2459  04D7  2CD9               	goto	u691
  2460  04D8  2CDA               	goto	u690
  2461  04D9                     u691:	
  2462  04D9  2CE1               	goto	l1553
  2463  04DA                     u690:	
  2464  04DA                     l1549:	
  2465  04DA  0873               	movf	___awdiv@divisor,w
  2466  04DB  02F5               	subwf	___awdiv@dividend,f
  2467  04DC  0874               	movf	___awdiv@divisor+1,w
  2468  04DD  1C03               	skipc
  2469  04DE  03F6               	decf	___awdiv@dividend+1,f
  2470  04DF  02F6               	subwf	___awdiv@dividend+1,f
  2471  04E0                     l1551:	
  2472  04E0  1422               	bsf	___awdiv@quotient,0
  2473  04E1                     l1553:	
  2474  04E1  3001               	movlw	1
  2475  04E2                     u705:	
  2476  04E2  1003               	clrc
  2477  04E3  0CF4               	rrf	___awdiv@divisor+1,f
  2478  04E4  0CF3               	rrf	___awdiv@divisor,f
  2479  04E5  3EFF               	addlw	-1
  2480  04E6  1D03               	skipz
  2481  04E7  2CE2               	goto	u705
  2482  04E8                     l1555:	
  2483  04E8  3001               	movlw	1
  2484  04E9  02A0               	subwf	___awdiv@counter,f
  2485  04EA  1D03               	btfss	3,2
  2486  04EB  2CED               	goto	u711
  2487  04EC  2CEE               	goto	u710
  2488  04ED                     u711:	
  2489  04ED  2CC9               	goto	l1547
  2490  04EE                     u710:	
  2491  04EE                     l1557:	
  2492  04EE  0821               	movf	___awdiv@sign,w
  2493  04EF  1903               	btfsc	3,2
  2494  04F0  2CF2               	goto	u721
  2495  04F1  2CF3               	goto	u720
  2496  04F2                     u721:	
  2497  04F2  2CF8               	goto	l1561
  2498  04F3                     u720:	
  2499  04F3                     l1559:	
  2500  04F3  09A2               	comf	___awdiv@quotient,f
  2501  04F4  09A3               	comf	___awdiv@quotient+1,f
  2502  04F5  0AA2               	incf	___awdiv@quotient,f
  2503  04F6  1903               	skipnz
  2504  04F7  0AA3               	incf	___awdiv@quotient+1,f
  2505  04F8                     l1561:	
  2506  04F8  0823               	movf	___awdiv@quotient+1,w
  2507  04F9  00F4               	movwf	?___awdiv+1
  2508  04FA  0822               	movf	___awdiv@quotient,w
  2509  04FB  00F3               	movwf	?___awdiv
  2510  04FC                     l430:	
  2511  04FC  0008               	return
  2512  04FD                     __end_of___awdiv:	
  2513                           
  2514                           	psect	text4
  2515  0688                     __ptext4:	
  2516 ;; *************** function _LCD_init *****************
  2517 ;; Defined at:
  2518 ;;		line 9 in file "lcd.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0
  2535 ;;      Totals:         1       0       0       0       0
  2536 ;;Total ram usage:        1 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		_LCD_sendCommand
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _LCD_init
  2548  0688                     _LCD_init:	
  2549  0688                     l1451:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2552                           
  2553                           
  2554                           ;lcd.c: 11:  TRISB &=~(1<<3);
  2555  0688  30F7               	movlw	247
  2556  0689  00F5               	movwf	??_LCD_init
  2557  068A  0875               	movf	??_LCD_init,w
  2558  068B  1683               	bsf	3,5	;RP0=1, select bank1
  2559  068C  1303               	bcf	3,6	;RP1=0, select bank1
  2560  068D  0586               	andwf	6,f	;volatile
  2561                           
  2562                           ;lcd.c: 12:     TRISB &=~(1<<4);
  2563  068E  30EF               	movlw	239
  2564  068F  00F5               	movwf	??_LCD_init
  2565  0690  0875               	movf	??_LCD_init,w
  2566  0691  0586               	andwf	6,f	;volatile
  2567                           
  2568                           ;lcd.c: 13:     TRISB &=~(1<<5);
  2569  0692  30DF               	movlw	223
  2570  0693  00F5               	movwf	??_LCD_init
  2571  0694  0875               	movf	??_LCD_init,w
  2572  0695  0586               	andwf	6,f	;volatile
  2573                           
  2574                           ;lcd.c: 17:  TRISC &= 0x0F;
  2575  0696  300F               	movlw	15
  2576  0697  00F5               	movwf	??_LCD_init
  2577  0698  0875               	movf	??_LCD_init,w
  2578  0699  0587               	andwf	7,f	;volatile
  2579  069A                     l1453:	
  2580                           
  2581                           ;lcd.c: 21:  LCD_sendCommand(0x02);
  2582  069A  3002               	movlw	2
  2583  069B  120A  118A  25B0  120A  118A  	fcall	_LCD_sendCommand
  2584  06A0                     l1455:	
  2585                           
  2586                           ;lcd.c: 22:  LCD_sendCommand(0x28);
  2587  06A0  3028               	movlw	40
  2588  06A1  120A  118A  25B0  120A  118A  	fcall	_LCD_sendCommand
  2589  06A6                     l1457:	
  2590                           
  2591                           ;lcd.c: 28:  LCD_sendCommand(0x0C);
  2592  06A6  300C               	movlw	12
  2593  06A7  120A  118A  25B0  120A  118A  	fcall	_LCD_sendCommand
  2594  06AC                     l1459:	
  2595                           
  2596                           ;lcd.c: 29:  LCD_sendCommand(0x01);
  2597  06AC  3001               	movlw	1
  2598  06AD  120A  118A  25B0  120A  118A  	fcall	_LCD_sendCommand
  2599  06B2                     l164:	
  2600  06B2  0008               	return
  2601  06B3                     __end_of_LCD_init:	
  2602                           
  2603                           	psect	text5
  2604  0651                     __ptext5:	
  2605 ;; *************** function _LCD_goToRowColumn *****************
  2606 ;; Defined at:
  2607 ;;		line 131 in file "lcd.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  row             1    wreg     unsigned char 
  2610 ;;  col             1    5[COMMON] unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  row             1    8[COMMON] unsigned char 
  2613 ;;  address         1    9[COMMON] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         1       0       0       0       0
  2624 ;;      Locals:         2       0       0       0       0
  2625 ;;      Temps:          2       0       0       0       0
  2626 ;;      Totals:         5       0       0       0       0
  2627 ;;Total ram usage:        5 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    2
  2630 ;; This function calls:
  2631 ;;		_LCD_sendCommand
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;;		_LCD_displayStringRowColumn
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _LCD_goToRowColumn
  2640  0651                     _LCD_goToRowColumn:	
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _LCD_goToRowColumn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2644                           ;LCD_goToRowColumn@row stored from wreg
  2645  0651  00F8               	movwf	LCD_goToRowColumn@row
  2646  0652                     l1501:	
  2647                           
  2648                           ;lcd.c: 131: void LCD_goToRowColumn(uint8 row , uint8 col);lcd.c: 132: {;lcd.c: 133:  ui
      +                          nt8 address;;lcd.c: 135:  switch(row)
  2649  0652  2E6A               	goto	l1513
  2650  0653                     l1503:	
  2651                           
  2652                           ;lcd.c: 138:   address=col;
  2653  0653  0875               	movf	LCD_goToRowColumn@col,w
  2654  0654  00F6               	movwf	??_LCD_goToRowColumn
  2655  0655  0876               	movf	??_LCD_goToRowColumn,w
  2656  0656  00F9               	movwf	LCD_goToRowColumn@address
  2657                           
  2658                           ;lcd.c: 139:   break;
  2659  0657  2E80               	goto	l1515
  2660  0658                     l1505:	
  2661                           
  2662                           ;lcd.c: 142:   address = 0x40+col;
  2663  0658  0875               	movf	LCD_goToRowColumn@col,w
  2664  0659  3E40               	addlw	64
  2665  065A  00F6               	movwf	??_LCD_goToRowColumn
  2666  065B  0876               	movf	??_LCD_goToRowColumn,w
  2667  065C  00F9               	movwf	LCD_goToRowColumn@address
  2668                           
  2669                           ;lcd.c: 143:   break;
  2670  065D  2E80               	goto	l1515
  2671  065E                     l1507:	
  2672                           
  2673                           ;lcd.c: 146:   address= 0x10 + col;
  2674  065E  0875               	movf	LCD_goToRowColumn@col,w
  2675  065F  3E10               	addlw	16
  2676  0660  00F6               	movwf	??_LCD_goToRowColumn
  2677  0661  0876               	movf	??_LCD_goToRowColumn,w
  2678  0662  00F9               	movwf	LCD_goToRowColumn@address
  2679                           
  2680                           ;lcd.c: 147:   break;
  2681  0663  2E80               	goto	l1515
  2682  0664                     l1509:	
  2683                           
  2684                           ;lcd.c: 150:   address= 0x50 + col;
  2685  0664  0875               	movf	LCD_goToRowColumn@col,w
  2686  0665  3E50               	addlw	80
  2687  0666  00F6               	movwf	??_LCD_goToRowColumn
  2688  0667  0876               	movf	??_LCD_goToRowColumn,w
  2689  0668  00F9               	movwf	LCD_goToRowColumn@address
  2690                           
  2691                           ;lcd.c: 151:   break;
  2692  0669  2E80               	goto	l1515
  2693  066A                     l1513:	
  2694  066A  0878               	movf	LCD_goToRowColumn@row,w
  2695  066B  00F6               	movwf	??_LCD_goToRowColumn
  2696  066C  01F7               	clrf	??_LCD_goToRowColumn+1
  2697                           
  2698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2699                           ; Switch size 1, requested type "simple"
  2700                           ; Number of cases is 1, Range of values is 0 to 0
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte            4     3 (average)
  2704                           ; direct_byte           11     8 (fixed)
  2705                           ; jumptable            260     6 (fixed)
  2706                           ;	Chosen strategy is simple_byte
  2707  066D  0877               	movf	??_LCD_goToRowColumn+1,w
  2708  066E  3A00               	xorlw	0	; case 0
  2709  066F  1903               	skipnz
  2710  0670  2E72               	goto	l1935
  2711  0671  2E80               	goto	l1515
  2712  0672                     l1935:	
  2713                           
  2714                           ; Switch size 1, requested type "simple"
  2715                           ; Number of cases is 4, Range of values is 0 to 3
  2716                           ; switch strategies available:
  2717                           ; Name         Instructions Cycles
  2718                           ; simple_byte           13     7 (average)
  2719                           ; direct_byte           20     8 (fixed)
  2720                           ; jumptable            260     6 (fixed)
  2721                           ;	Chosen strategy is simple_byte
  2722  0672  0876               	movf	??_LCD_goToRowColumn,w
  2723  0673  3A00               	xorlw	0	; case 0
  2724  0674  1903               	skipnz
  2725  0675  2E53               	goto	l1503
  2726  0676  3A01               	xorlw	1	; case 1
  2727  0677  1903               	skipnz
  2728  0678  2E58               	goto	l1505
  2729  0679  3A03               	xorlw	3	; case 2
  2730  067A  1903               	skipnz
  2731  067B  2E5E               	goto	l1507
  2732  067C  3A01               	xorlw	1	; case 3
  2733  067D  1903               	skipnz
  2734  067E  2E64               	goto	l1509
  2735  067F  2E80               	goto	l1515
  2736  0680                     l1515:	
  2737                           
  2738                           ;lcd.c: 154:  LCD_sendCommand(address | 0x80);
  2739  0680  0879               	movf	LCD_goToRowColumn@address,w
  2740  0681  3880               	iorlw	128
  2741  0682  120A  118A  25B0  120A  118A  	fcall	_LCD_sendCommand
  2742  0687                     l185:	
  2743  0687  0008               	return
  2744  0688                     __end_of_LCD_goToRowColumn:	
  2745                           
  2746                           	psect	text6
  2747  06D6                     __ptext6:	
  2748 ;; *************** function _LCD_displayString *****************
  2749 ;; Defined at:
  2750 ;;		line 118 in file "lcd.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  str             1    wreg     PTR const unsigned char 
  2753 ;;		 -> STR_10(16), STR_9(21), STR_8(18), STR_7(18), 
  2754 ;;		 -> STR_6(18), STR_5(18), STR_4(18), STR_3(16), 
  2755 ;;		 -> STR_2(21), STR_1(15), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  str             1    7[COMMON] PTR const unsigned char 
  2758 ;;		 -> STR_10(16), STR_9(21), STR_8(18), STR_7(18), 
  2759 ;;		 -> STR_6(18), STR_5(18), STR_4(18), STR_3(16), 
  2760 ;;		 -> STR_2(21), STR_1(15), 
  2761 ;;  i               1    6[COMMON] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         0       0       0       0       0
  2772 ;;      Locals:         2       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0
  2774 ;;      Totals:         3       0       0       0       0
  2775 ;;Total ram usage:        3 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    2
  2778 ;; This function calls:
  2779 ;;		_LCD_displayCharacter
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;;		_LCD_displayStringRowColumn
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _LCD_displayString
  2788  06D6                     _LCD_displayString:	
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _LCD_displayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2792                           ;LCD_displayString@str stored from wreg
  2793  06D6  00F7               	movwf	LCD_displayString@str
  2794  06D7                     l1463:	
  2795                           
  2796                           ;lcd.c: 118: void LCD_displayString(const uint8 *str);lcd.c: 119: {;lcd.c: 120:  uint8 i
      +                          =0;
  2797  06D7  01F6               	clrf	LCD_displayString@i
  2798                           
  2799                           ;lcd.c: 122:  while(str[i] != '\0')
  2800  06D8  2EEA               	goto	l1469
  2801  06D9                     l1465:	
  2802                           
  2803                           ;lcd.c: 123:  {;lcd.c: 124:   LCD_displayCharacter(str[i]);
  2804  06D9  0876               	movf	LCD_displayString@i,w
  2805  06DA  0777               	addwf	LCD_displayString@str,w
  2806  06DB  0084               	movwf	4
  2807  06DC  120A  118A  2400  120A  118A  	fcall	stringdir
  2808  06E1  120A  118A  2602  120A  118A  	fcall	_LCD_displayCharacter
  2809  06E6                     l1467:	
  2810                           
  2811                           ;lcd.c: 125:   i++;
  2812  06E6  3001               	movlw	1
  2813  06E7  00F5               	movwf	??_LCD_displayString
  2814  06E8  0875               	movf	??_LCD_displayString,w
  2815  06E9  07F6               	addwf	LCD_displayString@i,f
  2816  06EA                     l1469:	
  2817                           
  2818                           ;lcd.c: 122:  while(str[i] != '\0')
  2819  06EA  0876               	movf	LCD_displayString@i,w
  2820  06EB  0777               	addwf	LCD_displayString@str,w
  2821  06EC  0084               	movwf	4
  2822  06ED  120A  118A  2400  120A  118A  	fcall	stringdir
  2823  06F2  3A00               	xorlw	0
  2824  06F3  1D03               	skipz
  2825  06F4  2EF6               	goto	u561
  2826  06F5  2EF7               	goto	u560
  2827  06F6                     u561:	
  2828  06F6  2ED9               	goto	l1465
  2829  06F7                     u560:	
  2830  06F7                     l176:	
  2831  06F7  0008               	return
  2832  06F8                     __end_of_LCD_displayString:	
  2833                           
  2834                           	psect	text7
  2835  0602                     __ptext7:	
  2836 ;; *************** function _LCD_displayCharacter *****************
  2837 ;; Defined at:
  2838 ;;		line 76 in file "lcd.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  data            1    wreg     unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  data            1    4[COMMON] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         1       0       0       0       0
  2854 ;;      Temps:          1       0       0       0       0
  2855 ;;      Totals:         2       0       0       0       0
  2856 ;;Total ram usage:        2 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    1
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_LCD_displayString
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           
  2867                           ;psect for function _LCD_displayCharacter
  2868  0602                     _LCD_displayCharacter:	
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _LCD_displayCharacter: [wreg+status,2+status,0]
  2872                           ;LCD_displayCharacter@data stored from wreg
  2873  0602  00F4               	movwf	LCD_displayCharacter@data
  2874  0603                     l1413:	
  2875                           
  2876                           ;lcd.c: 76: void LCD_displayCharacter(uint8 data);lcd.c: 77: {;lcd.c: 80:  (PORTB|=(1<<3
      +                          ));
  2877  0603  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0604  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0605  1586               	bsf	6,3	;volatile
  2880  0606                     l1415:	
  2881                           
  2882                           ;lcd.c: 81:  (PORTB&=(~(1<<4)));
  2883  0606  30EF               	movlw	239
  2884  0607  00F3               	movwf	??_LCD_displayCharacter
  2885  0608  0873               	movf	??_LCD_displayCharacter,w
  2886  0609  0586               	andwf	6,f	;volatile
  2887  060A                     l1417:	
  2888                           
  2889                           ;lcd.c: 82:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2890  060A  3053               	movlw	83
  2891  060B  00F3               	movwf	??_LCD_displayCharacter
  2892  060C                     u1167:	
  2893  060C  0BF3               	decfsz	??_LCD_displayCharacter,f
  2894  060D  2E0C               	goto	u1167
  2895  060E                     l1419:	
  2896                           
  2897                           ;lcd.c: 83:  (PORTB|=(1<<5));
  2898  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2899  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0610  1686               	bsf	6,5	;volatile
  2901  0611                     l1421:	
  2902                           
  2903                           ;lcd.c: 84:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2904  0611  3053               	movlw	83
  2905  0612  00F3               	movwf	??_LCD_displayCharacter
  2906  0613                     u1177:	
  2907  0613  0BF3               	decfsz	??_LCD_displayCharacter,f
  2908  0614  2E13               	goto	u1177
  2909                           
  2910                           ;lcd.c: 89:  PORTC = (PORTC & 0x0F) | ( data & 0xF0) ;
  2911  0615  30F0               	movlw	240
  2912  0616  0574               	andwf	LCD_displayCharacter@data,w
  2913  0617  00F3               	movwf	??_LCD_displayCharacter
  2914  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2916  061A  0807               	movf	7,w	;volatile
  2917  061B  390F               	andlw	15
  2918  061C  0473               	iorwf	??_LCD_displayCharacter,w
  2919  061D  0087               	movwf	7	;volatile
  2920  061E                     l1423:	
  2921                           
  2922                           ;lcd.c: 93:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2923  061E  3053               	movlw	83
  2924  061F  00F3               	movwf	??_LCD_displayCharacter
  2925  0620                     u1187:	
  2926  0620  0BF3               	decfsz	??_LCD_displayCharacter,f
  2927  0621  2E20               	goto	u1187
  2928  0622                     l1425:	
  2929                           
  2930                           ;lcd.c: 94:  (PORTB&=(~(1<<5)));
  2931  0622  30DF               	movlw	223
  2932  0623  00F3               	movwf	??_LCD_displayCharacter
  2933  0624  0873               	movf	??_LCD_displayCharacter,w
  2934  0625  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0626  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0627  0586               	andwf	6,f	;volatile
  2937                           
  2938                           ;lcd.c: 95:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2939  0628  3053               	movlw	83
  2940  0629  00F3               	movwf	??_LCD_displayCharacter
  2941  062A                     u1197:	
  2942  062A  0BF3               	decfsz	??_LCD_displayCharacter,f
  2943  062B  2E2A               	goto	u1197
  2944  062C                     l1427:	
  2945                           
  2946                           ;lcd.c: 96:  (PORTB|=(1<<5));
  2947  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2948  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2949  062E  1686               	bsf	6,5	;volatile
  2950                           
  2951                           ;lcd.c: 97:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2952  062F  3053               	movlw	83
  2953  0630  00F3               	movwf	??_LCD_displayCharacter
  2954  0631                     u1207:	
  2955  0631  0BF3               	decfsz	??_LCD_displayCharacter,f
  2956  0632  2E31               	goto	u1207
  2957  0633                     l1429:	
  2958                           
  2959                           ;lcd.c: 100:  PORTC = (PORTC & 0x0F) | ( ( data & 0x0F) << 4) ;
  2960  0633  0874               	movf	LCD_displayCharacter@data,w
  2961  0634  390F               	andlw	15
  2962  0635  00F3               	movwf	??_LCD_displayCharacter
  2963  0636  3004               	movlw	4
  2964  0637                     u535:	
  2965  0637  1003               	clrc
  2966  0638  0DF3               	rlf	??_LCD_displayCharacter,f
  2967  0639  3EFF               	addlw	-1
  2968  063A  1D03               	skipz
  2969  063B  2E37               	goto	u535
  2970  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2971  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2972  063E  0807               	movf	7,w	;volatile
  2973  063F  390F               	andlw	15
  2974  0640  0473               	iorwf	??_LCD_displayCharacter,w
  2975  0641  0087               	movwf	7	;volatile
  2976  0642                     l1431:	
  2977                           
  2978                           ;lcd.c: 111:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2979  0642  3053               	movlw	83
  2980  0643  00F3               	movwf	??_LCD_displayCharacter
  2981  0644                     u1217:	
  2982  0644  0BF3               	decfsz	??_LCD_displayCharacter,f
  2983  0645  2E44               	goto	u1217
  2984                           
  2985                           ;lcd.c: 112:  (PORTB&=(~(1<<5)));
  2986  0646  30DF               	movlw	223
  2987  0647  00F3               	movwf	??_LCD_displayCharacter
  2988  0648  0873               	movf	??_LCD_displayCharacter,w
  2989  0649  1283               	bcf	3,5	;RP0=0, select bank0
  2990  064A  1303               	bcf	3,6	;RP1=0, select bank0
  2991  064B  0586               	andwf	6,f	;volatile
  2992  064C                     l1433:	
  2993                           
  2994                           ;lcd.c: 113:  _delay((unsigned long)((1)*(1000000/4000.0)));
  2995  064C  3053               	movlw	83
  2996  064D  00F3               	movwf	??_LCD_displayCharacter
  2997  064E                     u1227:	
  2998  064E  0BF3               	decfsz	??_LCD_displayCharacter,f
  2999  064F  2E4E               	goto	u1227
  3000  0650                     l170:	
  3001  0650  0008               	return
  3002  0651                     __end_of_LCD_displayCharacter:	
  3003                           
  3004                           	psect	text8
  3005  073B                     __ptext8:	
  3006 ;; *************** function _LCD_clearScreen *****************
  3007 ;; Defined at:
  3008 ;;		line 167 in file "lcd.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    2
  3029 ;; This function calls:
  3030 ;;		_LCD_sendCommand
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _LCD_clearScreen
  3038  073B                     _LCD_clearScreen:	
  3039  073B                     l1461:	
  3040                           ;incstack = 0
  3041                           ; Regs used in _LCD_clearScreen: [wreg+status,2+status,0+pclath+cstack]
  3042                           
  3043                           
  3044                           ;lcd.c: 169:  LCD_sendCommand(0x01);
  3045  073B  3001               	movlw	1
  3046  073C  120A  118A  25B0  120A  118A  	fcall	_LCD_sendCommand
  3047  0741                     l191:	
  3048  0741  0008               	return
  3049  0742                     __end_of_LCD_clearScreen:	
  3050                           
  3051                           	psect	text9
  3052  05B0                     __ptext9:	
  3053 ;; *************** function _LCD_sendCommand *****************
  3054 ;; Defined at:
  3055 ;;		line 34 in file "lcd.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  command         1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  command         1    4[COMMON] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0
  3071 ;;      Temps:          1       0       0       0       0
  3072 ;;      Totals:         2       0       0       0       0
  3073 ;;Total ram usage:        2 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_LCD_init
  3080 ;;		_LCD_goToRowColumn
  3081 ;;		_LCD_clearScreen
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _LCD_sendCommand
  3087  05B0                     _LCD_sendCommand:	
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in _LCD_sendCommand: [wreg+status,2+status,0]
  3091                           ;LCD_sendCommand@command stored from wreg
  3092  05B0  00F4               	movwf	LCD_sendCommand@command
  3093  05B1                     l1393:	
  3094                           
  3095                           ;lcd.c: 34: void LCD_sendCommand(uint8 command);lcd.c: 35: {;lcd.c: 37:  (PORTB&=(~(1<<3
      +                          )));
  3096  05B1  30F7               	movlw	247
  3097  05B2  00F3               	movwf	??_LCD_sendCommand
  3098  05B3  0873               	movf	??_LCD_sendCommand,w
  3099  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3100  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3101  05B6  0586               	andwf	6,f	;volatile
  3102                           
  3103                           ;lcd.c: 38:  (PORTB&=(~(1<<4)));
  3104  05B7  30EF               	movlw	239
  3105  05B8  00F3               	movwf	??_LCD_sendCommand
  3106  05B9  0873               	movf	??_LCD_sendCommand,w
  3107  05BA  0586               	andwf	6,f	;volatile
  3108  05BB                     l1395:	
  3109                           
  3110                           ;lcd.c: 39:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3111  05BB  3053               	movlw	83
  3112  05BC  00F3               	movwf	??_LCD_sendCommand
  3113  05BD                     u1237:	
  3114  05BD  0BF3               	decfsz	??_LCD_sendCommand,f
  3115  05BE  2DBD               	goto	u1237
  3116  05BF                     l1397:	
  3117                           
  3118                           ;lcd.c: 40:  (PORTB|=(1<<5));
  3119  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3120  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3121  05C1  1686               	bsf	6,5	;volatile
  3122  05C2                     l1399:	
  3123                           
  3124                           ;lcd.c: 41:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3125  05C2  3053               	movlw	83
  3126  05C3  00F3               	movwf	??_LCD_sendCommand
  3127  05C4                     u1247:	
  3128  05C4  0BF3               	decfsz	??_LCD_sendCommand,f
  3129  05C5  2DC4               	goto	u1247
  3130                           
  3131                           ;lcd.c: 46:  PORTC = (PORTC & 0x0F) | ( command & 0xF0);
  3132  05C6  30F0               	movlw	240
  3133  05C7  0574               	andwf	LCD_sendCommand@command,w
  3134  05C8  00F3               	movwf	??_LCD_sendCommand
  3135  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3136  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3137  05CB  0807               	movf	7,w	;volatile
  3138  05CC  390F               	andlw	15
  3139  05CD  0473               	iorwf	??_LCD_sendCommand,w
  3140  05CE  0087               	movwf	7	;volatile
  3141  05CF                     l1401:	
  3142                           
  3143                           ;lcd.c: 50:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3144  05CF  3053               	movlw	83
  3145  05D0  00F3               	movwf	??_LCD_sendCommand
  3146  05D1                     u1257:	
  3147  05D1  0BF3               	decfsz	??_LCD_sendCommand,f
  3148  05D2  2DD1               	goto	u1257
  3149  05D3                     l1403:	
  3150                           
  3151                           ;lcd.c: 51:  (PORTB&=(~(1<<5)));
  3152  05D3  30DF               	movlw	223
  3153  05D4  00F3               	movwf	??_LCD_sendCommand
  3154  05D5  0873               	movf	??_LCD_sendCommand,w
  3155  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3156  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3157  05D8  0586               	andwf	6,f	;volatile
  3158                           
  3159                           ;lcd.c: 52:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3160  05D9  3053               	movlw	83
  3161  05DA  00F3               	movwf	??_LCD_sendCommand
  3162  05DB                     u1267:	
  3163  05DB  0BF3               	decfsz	??_LCD_sendCommand,f
  3164  05DC  2DDB               	goto	u1267
  3165  05DD                     l1405:	
  3166                           
  3167                           ;lcd.c: 53:  (PORTB|=(1<<5));
  3168  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3169  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3170  05DF  1686               	bsf	6,5	;volatile
  3171                           
  3172                           ;lcd.c: 54:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3173  05E0  3053               	movlw	83
  3174  05E1  00F3               	movwf	??_LCD_sendCommand
  3175  05E2                     u1277:	
  3176  05E2  0BF3               	decfsz	??_LCD_sendCommand,f
  3177  05E3  2DE2               	goto	u1277
  3178  05E4                     l1407:	
  3179                           
  3180                           ;lcd.c: 57:  PORTC = (PORTC & 0x0F) | ( ( command & 0x0F) << 4) ;
  3181  05E4  0874               	movf	LCD_sendCommand@command,w
  3182  05E5  390F               	andlw	15
  3183  05E6  00F3               	movwf	??_LCD_sendCommand
  3184  05E7  3004               	movlw	4
  3185  05E8                     u525:	
  3186  05E8  1003               	clrc
  3187  05E9  0DF3               	rlf	??_LCD_sendCommand,f
  3188  05EA  3EFF               	addlw	-1
  3189  05EB  1D03               	skipz
  3190  05EC  2DE8               	goto	u525
  3191  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3192  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  3193  05EF  0807               	movf	7,w	;volatile
  3194  05F0  390F               	andlw	15
  3195  05F1  0473               	iorwf	??_LCD_sendCommand,w
  3196  05F2  0087               	movwf	7	;volatile
  3197  05F3                     l1409:	
  3198                           
  3199                           ;lcd.c: 68:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3200  05F3  3053               	movlw	83
  3201  05F4  00F3               	movwf	??_LCD_sendCommand
  3202  05F5                     u1287:	
  3203  05F5  0BF3               	decfsz	??_LCD_sendCommand,f
  3204  05F6  2DF5               	goto	u1287
  3205                           
  3206                           ;lcd.c: 69:  (PORTB&=(~(1<<5)));
  3207  05F7  30DF               	movlw	223
  3208  05F8  00F3               	movwf	??_LCD_sendCommand
  3209  05F9  0873               	movf	??_LCD_sendCommand,w
  3210  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3211  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3212  05FC  0586               	andwf	6,f	;volatile
  3213  05FD                     l1411:	
  3214                           
  3215                           ;lcd.c: 70:  _delay((unsigned long)((1)*(1000000/4000.0)));
  3216  05FD  3053               	movlw	83
  3217  05FE  00F3               	movwf	??_LCD_sendCommand
  3218  05FF                     u1297:	
  3219  05FF  0BF3               	decfsz	??_LCD_sendCommand,f
  3220  0600  2DFF               	goto	u1297
  3221  0601                     l167:	
  3222  0601  0008               	return
  3223  0602                     __end_of_LCD_sendCommand:	
  3224                           
  3225                           	psect	text10
  3226  04FD                     __ptext10:	
  3227 ;; *************** function _Key_getPressedKey *****************
  3228 ;; Defined at:
  3229 ;;		line 41 in file "keypad.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  col             1   10[COMMON] unsigned char 
  3234 ;;  row             1    9[COMMON] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      unsigned char 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         2       0       0       0       0
  3246 ;;      Temps:          2       0       0       0       0
  3247 ;;      Totals:         4       0       0       0       0
  3248 ;;Total ram usage:        4 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    2
  3251 ;; This function calls:
  3252 ;;		_Keypad_4x3_adjustSwitchNumber
  3253 ;;		___bmul
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function _Key_getPressedKey
  3261  04FD                     _Key_getPressedKey:	
  3262  04FD                     l114:	
  3263                           ;incstack = 0
  3264                           ; Regs used in _Key_getPressedKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3265                           ;keypad.c: 43:  uint8 col ,row;;keypad.c: 45:  for(;;)
  3266                           
  3267  04FD                     l1471:	
  3268                           
  3269                           ;keypad.c: 46:  {;keypad.c: 47:   for(col=0;col<3;col++)
  3270  04FD  01FA               	clrf	Key_getPressedKey@col
  3271  04FE                     l1477:	
  3272                           
  3273                           ;keypad.c: 48:   {;keypad.c: 55:    TRISD =( TRISD | 0x7F) & (~(0x10 << col));
  3274  04FE  3010               	movlw	16
  3275  04FF  00F7               	movwf	??_Key_getPressedKey
  3276  0500  0A7A               	incf	Key_getPressedKey@col,w
  3277  0501  2D04               	goto	u574
  3278  0502                     u575:	
  3279  0502  1003               	clrc
  3280  0503  0DF7               	rlf	??_Key_getPressedKey,f
  3281  0504                     u574:	
  3282  0504  3EFF               	addlw	-1
  3283  0505  1D03               	skipz
  3284  0506  2D02               	goto	u575
  3285  0507  0877               	movf	??_Key_getPressedKey,w
  3286  0508  3AFF               	xorlw	255
  3287  0509  00F8               	movwf	??_Key_getPressedKey+1
  3288  050A  1683               	bsf	3,5	;RP0=1, select bank1
  3289  050B  1303               	bcf	3,6	;RP1=0, select bank1
  3290  050C  0808               	movf	8,w	;volatile
  3291  050D  387F               	iorlw	127
  3292  050E  0578               	andwf	??_Key_getPressedKey+1,w
  3293  050F  0088               	movwf	8	;volatile
  3294                           
  3295                           ;keypad.c: 62:    PORTD =(PORTD & 0x80) | ((0x10)<<col);
  3296  0510  3010               	movlw	16
  3297  0511  00F7               	movwf	??_Key_getPressedKey
  3298  0512  0A7A               	incf	Key_getPressedKey@col,w
  3299  0513  2D16               	goto	u584
  3300  0514                     u585:	
  3301  0514  1003               	clrc
  3302  0515  0DF7               	rlf	??_Key_getPressedKey,f
  3303  0516                     u584:	
  3304  0516  3EFF               	addlw	-1
  3305  0517  1D03               	skipz
  3306  0518  2D14               	goto	u585
  3307  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3308  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3309  051B  0808               	movf	8,w	;volatile
  3310  051C  3980               	andlw	128
  3311  051D  0477               	iorwf	??_Key_getPressedKey,w
  3312  051E  0088               	movwf	8	;volatile
  3313  051F                     l1479:	
  3314                           
  3315                           ;keypad.c: 79:    for(row=0;row<4;row++)
  3316  051F  01F9               	clrf	Key_getPressedKey@row
  3317  0520                     l1485:	
  3318                           
  3319                           ;keypad.c: 80:    {;keypad.c: 82:     if(( PORTD & (1<<row) ))
  3320  0520  3001               	movlw	1
  3321  0521  00F7               	movwf	??_Key_getPressedKey
  3322  0522  0A79               	incf	Key_getPressedKey@row,w
  3323  0523  2D26               	goto	u594
  3324  0524                     u595:	
  3325  0524  1003               	clrc
  3326  0525  0DF7               	rlf	??_Key_getPressedKey,f
  3327  0526                     u594:	
  3328  0526  3EFF               	addlw	-1
  3329  0527  1D03               	skipz
  3330  0528  2D24               	goto	u595
  3331  0529  0877               	movf	??_Key_getPressedKey,w
  3332  052A  0508               	andwf	8,w	;volatile
  3333  052B  1903               	btfsc	3,2
  3334  052C  2D2E               	goto	u601
  3335  052D  2D2F               	goto	u600
  3336  052E                     u601:	
  3337  052E  2D41               	goto	l1491
  3338  052F                     u600:	
  3339  052F                     l1487:	
  3340                           
  3341                           ;keypad.c: 83:     {;keypad.c: 85:      return(Keypad_4x3_adjustSwitchNumber(row*3 +col+
      +                          1));
  3342  052F  3003               	movlw	3
  3343  0530  00F7               	movwf	??_Key_getPressedKey
  3344  0531  0877               	movf	??_Key_getPressedKey,w
  3345  0532  00F3               	movwf	___bmul@multiplicand
  3346  0533  0879               	movf	Key_getPressedKey@row,w
  3347  0534  120A  118A  2716  120A  118A  	fcall	___bmul
  3348  0539  077A               	addwf	Key_getPressedKey@col,w
  3349  053A  3E01               	addlw	1
  3350  053B  120A  118A  26F8  120A  118A  	fcall	_Keypad_4x3_adjustSwitchNumber
  3351  0540  2D56               	goto	l120
  3352  0541                     l1491:	
  3353                           
  3354                           ;keypad.c: 93:    }
  3355  0541  3001               	movlw	1
  3356  0542  00F7               	movwf	??_Key_getPressedKey
  3357  0543  0877               	movf	??_Key_getPressedKey,w
  3358  0544  07F9               	addwf	Key_getPressedKey@row,f
  3359  0545                     l1493:	
  3360  0545  3004               	movlw	4
  3361  0546  0279               	subwf	Key_getPressedKey@row,w
  3362  0547  1C03               	skipc
  3363  0548  2D4A               	goto	u611
  3364  0549  2D4B               	goto	u610
  3365  054A                     u611:	
  3366  054A  2D20               	goto	l1485
  3367  054B                     u610:	
  3368  054B                     l1495:	
  3369                           
  3370                           ;keypad.c: 94:   }
  3371  054B  3001               	movlw	1
  3372  054C  00F7               	movwf	??_Key_getPressedKey
  3373  054D  0877               	movf	??_Key_getPressedKey,w
  3374  054E  07FA               	addwf	Key_getPressedKey@col,f
  3375  054F                     l1497:	
  3376  054F  3003               	movlw	3
  3377  0550  027A               	subwf	Key_getPressedKey@col,w
  3378  0551  1C03               	skipc
  3379  0552  2D54               	goto	u621
  3380  0553  2D55               	goto	u620
  3381  0554                     u621:	
  3382  0554  2CFE               	goto	l1477
  3383  0555                     u620:	
  3384  0555  2CFD               	goto	l114
  3385  0556                     l120:	
  3386  0556  0008               	return
  3387  0557                     __end_of_Key_getPressedKey:	
  3388                           
  3389                           	psect	text11
  3390  0716                     __ptext11:	
  3391 ;; *************** function ___bmul *****************
  3392 ;; Defined at:
  3393 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  multiplier      1    wreg     unsigned char 
  3396 ;;  multiplicand    1    3[COMMON] unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  multiplier      1    6[COMMON] unsigned char 
  3399 ;;  product         1    5[COMMON] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         1       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0
  3412 ;;      Totals:         4       0       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;;		_Key_getPressedKey
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function ___bmul
  3426  0716                     ___bmul:	
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3430                           ;___bmul@multiplier stored from wreg
  3431  0716  00F6               	movwf	___bmul@multiplier
  3432  0717                     l1435:	
  3433  0717  01F5               	clrf	___bmul@product
  3434  0718                     l1437:	
  3435  0718  1C76               	btfss	___bmul@multiplier,0
  3436  0719  2F1B               	goto	u541
  3437  071A  2F1C               	goto	u540
  3438  071B                     u541:	
  3439  071B  2F20               	goto	l1441
  3440  071C                     u540:	
  3441  071C                     l1439:	
  3442  071C  0873               	movf	___bmul@multiplicand,w
  3443  071D  00F4               	movwf	??___bmul
  3444  071E  0874               	movf	??___bmul,w
  3445  071F  07F5               	addwf	___bmul@product,f
  3446  0720                     l1441:	
  3447  0720  1003               	clrc
  3448  0721  0DF3               	rlf	___bmul@multiplicand,f
  3449  0722                     l1443:	
  3450  0722  1003               	clrc
  3451  0723  0CF6               	rrf	___bmul@multiplier,f
  3452  0724  0876               	movf	___bmul@multiplier,w
  3453  0725  1D03               	btfss	3,2
  3454  0726  2F28               	goto	u551
  3455  0727  2F29               	goto	u550
  3456  0728                     u551:	
  3457  0728  2F18               	goto	l1437
  3458  0729                     u550:	
  3459  0729                     l1445:	
  3460  0729  0875               	movf	___bmul@product,w
  3461  072A                     l303:	
  3462  072A  0008               	return
  3463  072B                     __end_of___bmul:	
  3464                           
  3465                           	psect	text12
  3466  06F8                     __ptext12:	
  3467 ;; *************** function _Keypad_4x3_adjustSwitchNumber *****************
  3468 ;; Defined at:
  3469 ;;		line 101 in file "keypad.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  num_button      1    wreg     unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  num_button      1    5[COMMON] unsigned char 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      unsigned char 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         1       0       0       0       0
  3485 ;;      Temps:          2       0       0       0       0
  3486 ;;      Totals:         3       0       0       0       0
  3487 ;;Total ram usage:        3 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    1
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_Key_getPressedKey
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _Keypad_4x3_adjustSwitchNumber
  3499  06F8                     _Keypad_4x3_adjustSwitchNumber:	
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _Keypad_4x3_adjustSwitchNumber: [wreg-fsr0h+status,2+status,0]
  3503                           ;Keypad_4x3_adjustSwitchNumber@num_button stored from wreg
  3504  06F8  00F5               	movwf	Keypad_4x3_adjustSwitchNumber@num_button
  3505  06F9                     l1359:	
  3506                           
  3507                           ;keypad.c: 101: static uint8 Keypad_4x3_adjustSwitchNumber(uint8 num_button);keypad.c: 1
      +                          02: {;keypad.c: 103:  switch(num_button)
  3508  06F9  2F02               	goto	l1387
  3509  06FA                     l1361:	
  3510                           
  3511                           ;keypad.c: 106:   return '*';
  3512  06FA  302A               	movlw	42
  3513  06FB  2F15               	goto	l126
  3514  06FC                     l1367:	
  3515                           
  3516                           ;keypad.c: 110:   return 0 ;
  3517  06FC  3000               	movlw	0
  3518  06FD  2F15               	goto	l126
  3519  06FE                     l1373:	
  3520                           
  3521                           ;keypad.c: 114:   return '#';
  3522  06FE  3023               	movlw	35
  3523  06FF  2F15               	goto	l126
  3524  0700                     l1379:	
  3525                           
  3526                           ;keypad.c: 118:   return num_button;
  3527  0700  0875               	movf	Keypad_4x3_adjustSwitchNumber@num_button,w
  3528  0701  2F15               	goto	l126
  3529  0702                     l1387:	
  3530  0702  0875               	movf	Keypad_4x3_adjustSwitchNumber@num_button,w
  3531  0703  00F3               	movwf	??_Keypad_4x3_adjustSwitchNumber
  3532  0704  01F4               	clrf	??_Keypad_4x3_adjustSwitchNumber+1
  3533                           
  3534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3535                           ; Switch size 1, requested type "simple"
  3536                           ; Number of cases is 1, Range of values is 0 to 0
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            4     3 (average)
  3540                           ; direct_byte           11     8 (fixed)
  3541                           ; jumptable            260     6 (fixed)
  3542                           ;	Chosen strategy is simple_byte
  3543  0705  0874               	movf	??_Keypad_4x3_adjustSwitchNumber+1,w
  3544  0706  3A00               	xorlw	0	; case 0
  3545  0707  1903               	skipnz
  3546  0708  2F0A               	goto	l1937
  3547  0709  2F00               	goto	l1379
  3548  070A                     l1937:	
  3549                           
  3550                           ; Switch size 1, requested type "simple"
  3551                           ; Number of cases is 3, Range of values is 10 to 12
  3552                           ; switch strategies available:
  3553                           ; Name         Instructions Cycles
  3554                           ; simple_byte           10     6 (average)
  3555                           ; direct_byte           20    11 (fixed)
  3556                           ; jumptable            263     9 (fixed)
  3557                           ;	Chosen strategy is simple_byte
  3558  070A  0873               	movf	??_Keypad_4x3_adjustSwitchNumber,w
  3559  070B  3A0A               	xorlw	10	; case 10
  3560  070C  1903               	skipnz
  3561  070D  2EFA               	goto	l1361
  3562  070E  3A01               	xorlw	1	; case 11
  3563  070F  1903               	skipnz
  3564  0710  2EFC               	goto	l1367
  3565  0711  3A07               	xorlw	7	; case 12
  3566  0712  1903               	skipnz
  3567  0713  2EFE               	goto	l1373
  3568  0714  2F00               	goto	l1379
  3569  0715                     l126:	
  3570  0715  0008               	return
  3571  0716                     __end_of_Keypad_4x3_adjustSwitchNumber:	
  3572                           
  3573                           	psect	text13
  3574  0742                     __ptext13:	
  3575 ;; *************** function _INT_IRQ *****************
  3576 ;; Defined at:
  3577 ;;		line 21 in file "main.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		None
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _INT_IRQ
  3607  0742                     _INT_IRQ:	
  3608  0742                     l1449:	
  3609                           ;incstack = 0
  3610                           ; Regs used in _INT_IRQ: []
  3611                           
  3612                           
  3613                           ;main.c: 24:     TRISB |=(1<<0);
  3614  0742  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0743  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0744  1406               	bsf	6,0	;volatile
  3617                           
  3618                           ;main.c: 25:     GIE = 1 ;
  3619  0745  178B               	bsf	11,7	;volatile
  3620                           
  3621                           ;main.c: 26:     INTE =1 ;
  3622  0746  160B               	bsf	11,4	;volatile
  3623                           
  3624                           ;main.c: 27:     INTEDG =1;
  3625  0747  1701               	bsf	1,6	;volatile
  3626  0748                     l57:	
  3627  0748  0008               	return
  3628  0749                     __end_of_INT_IRQ:	
  3629                           
  3630                           	psect	text14
  3631  06B3                     __ptext14:	
  3632 ;; *************** function _ISR *****************
  3633 ;; Defined at:
  3634 ;;		line 374 in file "main.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0
  3650 ;;      Temps:          3       0       0       0       0
  3651 ;;      Totals:         3       0       0       0       0
  3652 ;;Total ram usage:        3 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		Interrupt level 1
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _ISR
  3663  06B3                     _ISR:	
  3664  06B3                     i1l1879:	
  3665                           
  3666                           ;main.c: 377:     if(INTF)
  3667  06B3  1C8B               	btfss	11,1	;volatile
  3668  06B4  2EB6               	goto	u100_21
  3669  06B5  2EB7               	goto	u100_20
  3670  06B6                     u100_21:	
  3671  06B6  2EBE               	goto	i1l1885
  3672  06B7                     u100_20:	
  3673  06B7                     i1l1881:	
  3674                           
  3675                           ;main.c: 378:     {;main.c: 379:         check_cancel = 1;
  3676  06B7  3001               	movlw	1
  3677  06B8  00F0               	movwf	??_ISR
  3678  06B9  0870               	movf	??_ISR,w
  3679  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3680  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3681  06BC  00AD               	movwf	_check_cancel	;volatile
  3682  06BD                     i1l1883:	
  3683                           
  3684                           ;main.c: 380:         INTF = 0;
  3685  06BD  108B               	bcf	11,1	;volatile
  3686  06BE                     i1l1885:	
  3687                           
  3688                           ;main.c: 383:     if(TMR1IF)
  3689  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3690  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3691  06C0  1C0C               	btfss	12,0	;volatile
  3692  06C1  2EC3               	goto	u101_21
  3693  06C2  2EC4               	goto	u101_20
  3694  06C3                     u101_21:	
  3695  06C3  2ECF               	goto	i1l105
  3696  06C4                     u101_20:	
  3697  06C4                     i1l1887:	
  3698                           
  3699                           ;main.c: 384:     {;main.c: 385:         TMR1 = 3036 ;
  3700  06C4  300B               	movlw	11
  3701  06C5  008F               	movwf	15	;volatile
  3702  06C6  30DC               	movlw	220
  3703  06C7  008E               	movwf	14	;volatile
  3704                           
  3705                           ;main.c: 387:         if(check %2==0)
  3706  06C8  1830               	btfsc	_check,0	;volatile
  3707  06C9  2ECB               	goto	u102_21
  3708  06CA  2ECC               	goto	u102_20
  3709  06CB                     u102_21:	
  3710  06CB  2ECE               	goto	i1l1891
  3711  06CC                     u102_20:	
  3712  06CC                     i1l1889:	
  3713                           
  3714                           ;main.c: 388:         {;main.c: 389:          num_sec--;
  3715  06CC  3001               	movlw	1
  3716  06CD  02AF               	subwf	_num_sec,f
  3717  06CE                     i1l1891:	
  3718                           
  3719                           ;main.c: 393:         TMR1IF = 0;
  3720  06CE  100C               	bcf	12,0	;volatile
  3721  06CF                     i1l105:	
  3722  06CF  0872               	movf	??_ISR+2,w
  3723  06D0  008A               	movwf	10
  3724  06D1  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  3725  06D2  0083               	movwf	3
  3726  06D3  0EFE               	swapf	btemp,f
  3727  06D4  0E7E               	swapf	btemp,w
  3728  06D5  0009               	retfie
  3729  06D6                     __end_of_ISR:	
  3730  007E                     btemp	set	126	;btemp
  3731  007E                     wtemp0	set	126
  3732                           
  3733                           	psect	intentry
  3734  0004                     __pintentry:	
  3735                           ;incstack = 0
  3736                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3737                           
  3738  0004                     interrupt_function:	
  3739  007E                     saved_w	set	btemp
  3740  0004  00FE               	movwf	btemp
  3741  0005  0E03               	swapf	3,w
  3742  0006  00F1               	movwf	??_ISR+1
  3743  0007  080A               	movf	10,w
  3744  0008  00F2               	movwf	??_ISR+2
  3745  0009  120A  118A  2EB3   	ljmp	_ISR


Data Sizes:
    Strings     142
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     13      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_displayString@str	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[16]), STR_9(CODE[21]), STR_8(CODE[18]), STR_7(CODE[18]), 
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[18]), STR_3(CODE[16]), 
		 -> STR_2(CODE[21]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Key_getPressedKey
    _LCD_init->_LCD_sendCommand
    _LCD_goToRowColumn->_LCD_sendCommand
    _LCD_displayString->_LCD_displayCharacter
    _LCD_clearScreen->_LCD_sendCommand
    _Key_getPressedKey->___bmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    4226
                                              4 BANK0      9     9      0
                            _INT_IRQ
                  _Key_getPressedKey
                    _LCD_clearScreen
                  _LCD_displayString
                  _LCD_goToRowColumn
                           _LCD_init
                            ___awdiv
                            ___awmod
                             ___bmul
                         _timer1_INT
 ---------------------------------------------------------------------------------
 (1) _timer1_INT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0      44
                                              5 COMMON     1     1      0
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_goToRowColumn                                    5     4      1     484
                                              5 COMMON     5     4      1
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_displayString                                    3     3      0     497
                                              5 COMMON     3     3      0
               _LCD_displayCharacter
 ---------------------------------------------------------------------------------
 (2) _LCD_displayCharacter                                 2     2      0      44
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clearScreen                                      0     0      0      44
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_sendCommand                                      2     2      0      44
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Key_getPressedKey                                    4     4      0     642
                                              7 COMMON     4     4      0
      _Keypad_4x3_adjustSwitchNumber
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     396
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Keypad_4x3_adjustSwitchNumber                        3     3      0      44
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _INT_IRQ                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_IRQ
   _Key_getPressedKey
     _Keypad_4x3_adjustSwitchNumber
     ___bmul
   _LCD_clearScreen
     _LCD_sendCommand
   _LCD_displayString
     _LCD_displayCharacter
   _LCD_goToRowColumn
     _LCD_sendCommand
   _LCD_init
     _LCD_sendCommand
   ___awdiv
   ___awmod
   ___bmul
   _timer1_INT

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      11       5       21.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 23:55:16 2020

                                      pc 0002                           ___bmul@product 0075  
                            __CFG_CP$OFF 0000                                       l57 0748  
                                     l86 0332                             ___awdiv@sign 0021  
                                     fsr 0004                     Key_getPressedKey@col 007A  
                   Key_getPressedKey@row 0079                                      l120 0556  
                                    l114 04FD                                      l126 0715  
                                    l303 072A                                      l170 0650  
                                    l164 06B2                                      l149 073A  
                                    l430 04FC                                      l167 0601  
                                    l191 0741                                      l176 06F7  
                                    l185 0687                                      l443 05AF  
                                    _GIE 005F                                      u600 052F  
                                    u601 052E                                      u610 054B  
                           __CFG_CPD$OFF 0000                                      u611 054A  
                                    u540 071C                                      u620 0555  
                                    _ISR 06B3                                      u541 071B  
                                    u621 0554                                      u525 05E8  
                                    u550 0729                                      u710 04EE  
                                    u630 049B                                      u551 0728  
                                    u535 0637                                      u711 04ED  
                                    u631 049A                                      u560 06F7  
                                    u720 04F3                                      u640 04A6  
                                    u800 05A1                                      u561 06F6  
                                    u721 04F2                                      u705 04E2  
                                    u641 04A5                                      u801 05A0  
                                    u650 04B7                                      u810 05A6  
                                    u730 055C                                      u651 04B6  
                                    u811 05A5                                      u731 055B  
                                    u740 0567                                      u900 021D  
                                    u820 00C5                                      u741 0566  
                                    u901 021C                                      u821 00C4  
                                    u574 0504                                      u670 04C9  
                                    u750 0572                                      u910 0222  
                                    u830 0126                                      u575 0502  
                                    u671 04C8                                      u751 0571  
                                    u911 0221                                      u831 0125  
                                    u584 0516                                      u920 023B  
                                    u840 012A                                      u585 0514  
                                    u665 04BB                                      u921 023A  
                                    u841 0129                                      u594 0526  
                                    u690 04DA                                      u770 0584  
                                    u930 0241                                      u850 012E  
                                    u595 0524                                      u691 04D9  
                                    u771 0583                                      u931 0240  
                                    u851 012D                                      u780 058E  
                                    u940 02A2                                      u860 0135  
                                    u685 04CA                                      u781 058D  
                                    u765 0576                                      u941 02A1  
                                    u861 0134                                      u950 02EB  
                                    u870 01AE                                      u695 04D6  
                                    u951 02EA                                      u871 01AD  
                                    u960 030F                                      u880 01B5  
                                    u785 058A                                      u961 030E  
                                    u881 01B4                                      u970 0314  
                                    u890 0218                                      u795 0595  
                                    u971 0313                                      u891 0217  
                                    u980 0338                                      u981 0337  
                                    u990 03C4                                      u991 03C3  
                                    fsr0 0004                             ___awmod@sign 0079  
                           __CFG_FOSC$XT 0000                             __CFG_LVP$OFF 0000  
                                   ?_ISR 0070                                     l1401 05CF  
                                   l1411 05FD                                     l1403 05D3  
                                   l1405 05DD                                     l1421 0611  
                                   l1413 0603                                     l1501 0652  
                                   l1407 05E4                                     l1431 0642  
                                   l1423 061E                                     l1415 0606  
                                   l1503 0653                                     l1361 06FA  
                                   l1441 0720                                     l1409 05F3  
                                   l1433 064C                                     l1425 0622  
                                   l1417 060A                                     l1505 0658  
                                   l1513 066A                                     l1521 0494  
                                   l1443 0722                                     l1435 0717  
                                   l1427 062C                                     l1419 060E  
                                   l1507 065E                                     l1515 0680  
                                   l1451 0688                                     l1531 04A6  
                                   l1523 0497                                     l1611 0036  
                                   l1603 001C                                     l1373 06FE  
                                   l1445 0729                                     l1437 0718  
                                   l1461 073B                                     l1429 0633  
                                   l1509 0664                                     l1453 069A  
                                   l1541 04BA                                     l1533 04AB  
                                   l1525 049B                                     l1701 014C  
                                   l1621 0049                                     l1613 003C  
                                   l1605 0024                                     l1367 06FC  
                                   l1359 06F9                                     l1439 071C  
                                   l1471 04FD                                     l1463 06D7  
                                   l1455 06A0                                     l1551 04E0  
                                   l1543 04C1                                     l1535 04AF  
                                   l1527 04A0                                     l1711 0177  
                                   l1703 015A                                     l1631 0067  
                                   l1623 004F                                     l1615 003F  
                                   l1607 002A                                     l1449 0742  
                                   l1393 05B1                                     l1465 06D9  
                                   l1457 06A6                                     l1561 04F8  
                                   l1553 04E1                                     l1545 04C5  
                                   l1537 04B1                                     l1529 04A2  
                                   l1801 02DA                                     l1713 017B  
                                   l1721 01A7                                     l1705 015F  
                                   l1641 0084                                     l1633 006D  
                                   l1625 0055                                     l1617 0040  
                                   l1609 0030                                     l1379 0700  
                                   l1387 0702                                     l1491 0541  
                                   l1395 05BB                                     l1467 06E6  
                                   l1459 06AC                                     l1555 04E8  
                                   l1547 04C9                                     l1539 04B7  
                                   l1571 0561                                     l1811 02F0  
                                   l1803 02DE                                     l1731 01C0  
                                   l1723 01AE                                     l1715 0182  
                                   l1707 0166                                     l1651 00AE  
                                   l1643 008E                                     l1635 0073  
                                   l1627 005B                                     l1619 0041  
                                   l1493 0545                                     l1485 0520  
                                   l1477 04FE                                     l1397 05BF  
                                   l1469 06EA                                     l1549 04DA  
                                   l1557 04EE                                     l1581 0575  
                                   l1573 0563                                     l1565 0557  
                                   l1821 030F                                     l1813 02F6  
                                   l1805 02E2                                     l1741 01DC  
                                   l1733 01C4                                     l1717 018D  
                                   l1709 016D                                     l1725 01B0  
                                   l1661 00DC                                     l1645 0092  
                                   l1653 00BE                                     l1637 0078  
                                   l1629 0061                                     l1495 054B  
                                   l1487 052F                                     l1479 051F  
                                   l1399 05C2                                     l1559 04F3  
                                   l1591 0594                                     l1583 057C  
                                   l1575 0567                                     l1567 0558  
                                   l1831 032C                                     l1823 0314  
                                   l1807 02E6                                     l1751 01FE  
                                   l1743 01E3                                     l1735 01C8  
                                   l1727 01B5                                     l1719 0197  
                                   l1815 02FA                                     l1671 00FD  
                                   l1663 00E3                                     l1655 00C5  
                                   l1647 0099                                     l1639 007D  
                                   l1497 054F                                     l1593 059B  
                                   l1585 0580                                     l1577 056C  
                                   l1569 055C                                     l1841 0348  
                                   l1833 0330                                     l1825 0319  
                                   l1817 0306                                     l1809 02EB  
                                   l1761 021D                                     l1753 0204  
                                   l1745 01EA                                     l1737 01CF  
                                   l1729 01BA                                     l1681 011F  
                                   l1673 0104                                     l1665 00E9  
                                   l1657 00CF                                     l1649 00A4  
                                   l1587 0584                                     l1579 0572  
                                   l1595 05A1                                     l1499 072B  
                                   l1851 0357                                     l1843 0349  
                                   l1827 031F                                     l1819 030A  
                                   l1771 0231                                     l1763 0222  
                                   l1755 020B                                     l1747 01F0  
                                   l1739 01D6                                     l1691 0135  
                                   l1683 0126                                     l1835 0333  
                                   l1675 010B                                     l1667 00F0  
                                   l1659 00D5                                     l1597 05A6  
                                   l1589 058E                                     l1861 037C  
                                   l1853 035C                                     l1837 0338  
                                   l1845 034B                                     l1829 0326  
                                   l1781 023B                                     l1773 0232  
                                   l1765 0227                                     l1749 01F7  
                                   l1693 013A                                     l1757 0212  
                                   l1685 012A                                     l1677 0111  
                                   l1669 00F7                                     l1935 0672  
                                   l1599 05AB                                     l1871 03A3  
                                   l1863 0383                                     l1855 0362  
                                   l1847 0350                                     l1839 0344  
                                   l1791 02A6                                     l1783 0241  
                                   l1775 0233                                     l1767 022D  
                                   l1759 0218                                     l1695 013E  
                                   l1687 012E                                     l1679 0118  
                                   l1937 070A                                     l1873 03AD  
                                   l1865 038D                                     l1857 0370  
                                   l1849 0354                                     l1793 02BC  
                                   l1785 0244                                     l1777 0235  
                                   l1769 0230                                     l1697 0141  
                                   l1689 0130                                     l1867 0391  
                                   l1875 03BD                                     l1859 0375  
                                   l1795 02D2                                     l1787 029D  
                                   l1779 0236                                     l1699 0146  
                                   l1877 03C4                                     l1869 0398  
                                   l1789 02A2                                     l1797 02D5  
                                   l1799 02D6                                     STR_1 0485  
                                   STR_2 0406                                     STR_3 0475  
                                   STR_4 0463                                     STR_5 043F  
                                   STR_6 0451                                     STR_7 041B  
                                   STR_8 042D                                     STR_9 0406  
                                   u1107 01D3                                     u1117 01E7  
                                   u1037 009F                                     u1207 0631  
                                   u1127 01FB                                     u1047 00E0  
                                   u1217 0644                                     u1137 020F  
                                   u1057 00F4                                     u1227 064E  
                                   u1147 036A                                     u1067 0108  
                        __end_of_INT_IRQ 0749                                     u1237 05BD  
                                   u1157 039E                                     u1077 011C  
                                   u1247 05C4                                     u1167 060C  
                                   u1087 0154                                     u1257 05D1  
                                   u1177 0613                                     u1097 0188  
                                   u1267 05DB                                     u1187 0620  
                                   u1277 05E2                                     u1197 062A  
                                   u1287 05F5                                     u1297 05FF  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     _TMR1 000E  
                           __CFG_WRT$OFF 0000                                     _main 001C  
                                   btemp 007E               __size_of_LCD_displayString 0022  
                          __CFG_BOREN$ON 0000                                     start 000C  
                      ___bmul@multiplier 0076                                    ??_ISR 0070  
                       __end_of_LCD_init 06B3                                    ?_main 0070  
                        __end_of___awdiv 04FD                                    STR_10 0475  
                          __CFG_WDTE$OFF 0000                          __end_of___awmod 05B0  
                        ___awdiv@divisor 0073                                    i1l105 06CF  
                        ___awdiv@counter 0020                                    _PORTA 0005  
                                  _PORTB 0006                                    _PORTC 0007  
                                  _PORTD 0008                                    _PORTE 0009  
                                  _TRISA 0085                                    _TRISB 0086  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _TRISE 0089                       LCD_displayString@i 0076  
                                  _check 0030                             main@num_sec1 0029  
                           main@num_sec2 0027                                    pclath 000A  
                                  status 0003    __end_of_Keypad_4x3_adjustSwitchNumber 0716  
 __size_of_Keypad_4x3_adjustSwitchNumber 001E            _Keypad_4x3_adjustSwitchNumber 06F8  
                                  wtemp0 007E                          __initialization 000F  
                      ??_LCD_clearScreen 0075                             __end_of_main 03CA  
                          main@check_lcd 002A                                   ??_main 0024  
                              ??_INT_IRQ 0073                         ___awdiv@dividend 0075  
                                 u100_20 06B7                                   u100_21 06B6  
                                 u101_20 06C4                                   u101_21 06C3  
                                 u102_20 06CC                                   u102_21 06CB  
                                 i1l1881 06B7                                   i1l1891 06CE  
                                 i1l1883 06BD                                   i1l1885 06BE  
                                 i1l1887 06C4                                   i1l1879 06B3  
                                 i1l1889 06CC                                   _INTEDG 040E  
                                 _TMR1IE 0460                                   _TMR1IF 0060  
                                 _TMR1CS 0081                                   _TMR1ON 0080  
                         __CFG_PWRTE$OFF 0000                                   ___bmul 0716  
                              ??___awdiv 0077                 LCD_goToRowColumn@address 0079  
                              ??___awmod 0077                 __size_of_LCD_sendCommand 0052  
                       ___awdiv@quotient 0022                          ___awmod@divisor 0073  
                        ___awmod@counter 0078                                   saved_w 007E  
                __end_of__initialization 0018                             _check_cancel 002D  
                              ?_LCD_init 0070                      ___bmul@multiplicand 0073  
                         __pcstackCOMMON 0070                             __pidataBANK0 0749  
                             __pbssBANK0 002D                               ??_LCD_init 0075  
                             __pmaintext 001C                                  ?___bmul 0073  
          __size_of_LCD_displayCharacter 004F                               __pintentry 0004  
                                _T1CKPS0 0084                                  _T1CKPS1 0085  
                      ??_LCD_sendCommand 0073                                  _INT_IRQ 0742  
                             __stringtab 0400                          _LCD_clearScreen 073B  
                   LCD_displayString@str 0077                        _Key_getPressedKey 04FD  
                        __size_of___bmul 0015                                  ___awdiv 0494  
                 LCD_sendCommand@command 0074                                  ___awmod 0557  
                     ?_Key_getPressedKey 0070                                  __ptext1 072B  
                                __ptext2 0557                                  __ptext3 0494  
                                __ptext4 0688                                  __ptext5 0651  
                                __ptext6 06D6                                  __ptext7 0602  
                                __ptext8 073B                                  __ptext9 05B0  
                           __size_of_ISR 0023                      ??_Key_getPressedKey 0077  
                       ___awmod@dividend 0075                                  _num_sec 002F  
                   end_of_initialization 0018                           main@num_minut1 002B  
                         main@num_minut2 002C                __end_of_Key_getPressedKey 0557  
                             _timer1_INT 072B                               _num_minuts 002E  
                __end_of_LCD_clearScreen 0742  Keypad_4x3_adjustSwitchNumber@num_button 0075  
                      __size_of_LCD_init 002B                           __end_of___bmul 072B  
                    start_initialization 000F                              __end_of_ISR 06D6  
             __size_of_Key_getPressedKey 005A                              ?_timer1_INT 0070  
                        _LCD_sendCommand 05B0                                 ??___bmul 0074  
                            __pdataBANK0 0030                                ___latbits 0002  
                       ?_LCD_clearScreen 0070                                 ?_INT_IRQ 0070  
                          __pcstackBANK0 0020             __end_of_LCD_displayCharacter 0651  
                      _LCD_goToRowColumn 0651                       ?_LCD_goToRowColumn 0075  
                    ??_LCD_goToRowColumn 0076                                 ?___awdiv 0073  
                               ?___awmod 0073           ?_Keypad_4x3_adjustSwitchNumber 0070  
                              __pstrings 0400                __end_of_LCD_goToRowColumn 0688  
                    __size_of_timer1_INT 0010                        interrupt_function 0004  
                __end_of_LCD_sendCommand 0602                                 _LCD_init 0688  
                            __stringbase 0405                                main@start 0028  
                       __size_of_INT_IRQ 0007                     _LCD_displayCharacter 0602  
                       __size_of___awdiv 0069                         __size_of___awmod 0059  
                     __end_of__stringtab 0406               __size_of_LCD_goToRowColumn 0037  
                               __ptext10 04FD                                 __ptext11 0716  
                               __ptext12 06F8                                 __ptext13 0742  
                               __ptext14 06B3                            __size_of_main 03AE  
                       ?_LCD_sendCommand 0070                        _LCD_displayString 06D6  
                           ??_timer1_INT 0073                    ?_LCD_displayCharacter 0070  
                     ?_LCD_displayString 0070                      ??_LCD_displayString 0075  
                   LCD_goToRowColumn@col 0075                     LCD_goToRowColumn@row 0078  
               LCD_displayCharacter@data 0074                       __end_of_timer1_INT 073B  
                               intlevel1 0000                __end_of_LCD_displayString 06F8  
                              stringcode 0400                                 stringdir 0400  
                               stringtab 0400          ??_Keypad_4x3_adjustSwitchNumber 0073  
               __size_of_LCD_clearScreen 0007                   ??_LCD_displayCharacter 0073  
